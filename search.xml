<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>umi前端规范</title>
      <link href="/2022/05/26/umi-qian-duan-gui-fan/"/>
      <url>/2022/05/26/umi-qian-duan-gui-fan/</url>
      
        <content type="html"><![CDATA[<h1 id="umi-中后台项目关于团队协作前端工程代码规范"><a href="#umi-中后台项目关于团队协作前端工程代码规范" class="headerlink" title="umi 中后台项目关于团队协作前端工程代码规范"></a>umi 中后台项目关于团队协作前端工程代码规范</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在多人开发的项目中，不能保证团队成员都使用相同的编辑器，那么不同的编辑器之间的格式设置各不相同，无法保证项目代码格式的统一，往往会出现意想不到的问题。</p><h2 id="为什么需要规范"><a href="#为什么需要规范" class="headerlink" title="为什么需要规范"></a>为什么需要规范</h2><p>统一代码规范的好处：</p><ul><li><p>提高代码整体的可读性、可维护性、可复用性、可移植性和可靠性，这会从根本上降低开发成本，也是最重要的一点。</p></li><li><p>保证代码的一致性：软件系统中最重要的因素之一就是编码的一致性。如果编码风格一致，也更加易于维护，因为团队内任何人都可以快速理解并修改。</p></li><li><p>提升团队整体效率：开发人员通常需要花费大量的时间来解决代码质量问题，如果都按照规范编写，也有助于团队尽早发现问题，甚至完全预防问题，这将提高整个交付过程的效率。</p></li><li><p>减少 code review 期间一系列的争议，因为缺乏标准，在争议过程中双方很难妥协</p></li></ul><p>若不统一代码规范，可能会造成的后果：</p><ul><li><p>由于缺乏规范，导致代码风格不一，增加团队成员间的心理负担，极端情况下，某段代码只有某个人能修改</p></li><li><p>团队间协作更加困难：因为开发人员得适应不同的风格，会导致效率低下（阅读代码是我们花费时间最多的地方）。</p></li><li><p>code review 期间可能经常为类似的事情做过多的讨论。</p></li><li><p>影响团队的生产力和质量，严重的甚至会影响团队和谐。</p></li></ul><h2 id="EditorConfig"><a href="#EditorConfig" class="headerlink" title="EditorConfig"></a>EditorConfig</h2><p>比如编辑器中一个制表符等于的空格数的大小（即缩进大小），各编辑器中及各个开发人员设置的大小是不一致的，那么如何保证团队代码在多人协同开发，使用编辑器格式不一的情况下仍然保证相同的格式呢，这就是 EditorConfig 要做的事情</p><h3 id="Editorconfig-是什么"><a href="#Editorconfig-是什么" class="headerlink" title="Editorconfig 是什么"></a>Editorconfig 是什么</h3><blockquote><p>EditorConfig 有助于为跨各种编辑器和 IDE 处理同一项目的多个开发人员保持一致的编码风格。EditorConfig 项目由用于定义编码样式的文件格式和一组文本编辑器插件组成，这些插件使编辑器能够读取文件格式并遵守定义的样式。EditorConfig 文件易于阅读，并且可以很好地与版本控制系统配合使用。</p></blockquote><h4 id="EditorConfig-组成"><a href="#EditorConfig-组成" class="headerlink" title="EditorConfig 组成"></a>EditorConfig 组成</h4><ul><li><p>EditorConfig 插件: EditorConfig 插件并不是所有的编辑器都默认支持的，点击 <a href="https://editorconfig.org/#pre-installed">EditorConfig</a> 查看编辑器默认支持情况。</p></li><li><p>.editorconfig 自定义文件</p></li></ul><p>EditorConfig 插件会读取 .editorconfig 文件中定义的内容，应用于编辑器。</p><p>.editorconfig 自定义文件是用来定义编辑器的编码格式规范，编辑器的行为会与 .editorconfig 文件中定义的一致，并且其优先级比编辑器自身的设置要高</p><h4 id="参考示例"><a href="#参考示例" class="headerlink" title="参考示例"></a>参考示例</h4><p>– .editorconfig –</p><pre><code># http://editorconfig.org# 所有的属性和值都不区分大小写。解析时它们是小写的。一般情况下，如果没有指定属性，将使用编辑器设置。# 对于任何属性，将其值设为 unset 来删除之前的定义，例如，添加indent_size = unset来取消对indent_size的定义。# 表示是最顶层的配置文件，发现值为true时，才会停止查找.editorconfig文件root = true[*]# 设置使用哪种缩进风格(tab是制表符，space是空格)，使用space可以提高代码的压缩率indent_style = space# 定义用于每个缩进级别的空格数indent_size = 2# 设置换行符，值为lf、cr和crlfend_of_line = lf# 设置编码格式，值为latin1、utf-8、utf-8-bom、utf-16be和utf-16lecharset = utf-8# 设置为true则删除换行符之前的任何空白字符# 设置为true会删除每一行后的任何空格 ***trim_trailing_whitespace = true# 设置为true以确保文件在保存时以换行符结尾# 如果设置为true，则文件最后一行也会确保以换行符结尾，会强制换行到下一行insert_final_newline = true# 一行最多 120 字符max_line_length = 120[*.md]trim_trailing_whitespace = false[Makefile]indent_style = tab</code></pre><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><ul><li><p><a href="https://github.com/editorconfig/editorconfig/wiki/EditorConfig-Properties">github 文档</a></p></li><li><p><a href="https://editorconfig.org/">EditorConig</a></p></li><li><p><a href="https://editorconfig-specification.readthedocs.io/#id1">Editorconfig 规范</a></p></li><li><p><a href="https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig">VS Code for EditorConfig</a></p></li></ul><h2 id="Prettier"><a href="#Prettier" class="headerlink" title="Prettier"></a>Prettier</h2><h4 id="Prettier-的作用"><a href="#Prettier-的作用" class="headerlink" title="Prettier 的作用"></a>Prettier 的作用</h4><blockquote><p>借用官方的话来说，Prettier 是一个固执的代码格式化程序，它删除所有原始样式*并确保所有输出的代码符合一致的样式。</p></blockquote><p>通俗点来说,Prettier 是一个代码格式化工具，可以在多人协作开发中能让每一行代码保持一致的风格，Prettier 是一种代码风格指南，Prettier 提供了很多的配置项和 API，你可以有选择的配置你想要的代码风格，并使用 Prettier 来进行统一格式处理。</p><h4 id="Prettier-支持"><a href="#Prettier-支持" class="headerlink" title="Prettier 支持"></a>Prettier 支持</h4><ul><li><p>JavaScript (包括实验性功能)</p></li><li><p>JSX</p></li><li><p>Angular</p></li><li><p>Vue</p></li><li><p>Flow</p></li><li><p>TypeScript</p></li><li><p>CSS, Less, and SCSS</p></li><li><p>HTML</p></li><li><p>Ember/Handlebars</p></li><li><p>JSON</p></li><li><p>GraphQL</p></li><li><p>Markdown, including GFM and MDX</p></li><li><p>YAML</p></li></ul><h3 id="Prettier-的优先级"><a href="#Prettier-的优先级" class="headerlink" title="Prettier 的优先级"></a>Prettier 的优先级</h3><ul><li>优先使用项目根目录下的 editorconfig 配置文件</li></ul><p><img src="https://net-bucket-private8-1300342648.cos.ap-singapore.myqcloud.com/4b24a6fa-1333-4c27-9a70-e07cdb05abad.png?sign=q-sign-algorithm=sha1&amp;q-ak=AKIDKPFp6A4IzRoVx9roxqRlocATBfI0Rfd6&amp;q-sign-time=1653471117;1653687117&amp;q-key-time=1653471117;1653687117&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=9d157f75b7a1cdb607437f772b777f4d7c5364e6"></p><ul><li>项目根目录下.prettierrc.js 或 vscode 的用户设置或者工作区设置配置的规则要优先于 prettier 插件扩展配置的细则</li></ul><p><img src="https://net-bucket-private8-1300342648.cos.ap-singapore.myqcloud.com/6db8db42-5a82-4d3a-aa72-47ebb7ca7bae.png?sign=q-sign-algorithm=sha1&amp;q-ak=AKIDKPFp6A4IzRoVx9roxqRlocATBfI0Rfd6&amp;q-sign-time=1653471132;1653687132&amp;q-key-time=1653471132;1653687132&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=e73d4c35b40e09792e4c7092f38adf419d3135ab"></p><p><img src="https://net-bucket-private8-1300342648.cos.ap-singapore.myqcloud.com/469f6e9d-6738-4309-9380-4e4ae3011be0.png?sign=q-sign-algorithm=sha1&amp;q-ak=AKIDKPFp6A4IzRoVx9roxqRlocATBfI0Rfd6&amp;q-sign-time=1653471146;1653687146&amp;q-key-time=1653471146;1653687146&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=a85412f692af47d9a759c312c8d70fc11fb01f05"></p><p><img src="https://net-bucket-private8-1300342648.cos.ap-singapore.myqcloud.com/388c40f4-3d5c-4b1a-91fb-98aa3de96bf2.png?sign=q-sign-algorithm=sha1&amp;q-ak=AKIDKPFp6A4IzRoVx9roxqRlocATBfI0Rfd6&amp;q-sign-time=1653471160;1653687160&amp;q-key-time=1653471160;1653687160&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=fa7a9ac0ec9b433f66f30843b24e9eb082fe600f"></p><h3 id="团队协作中使用-Prettier"><a href="#团队协作中使用-Prettier" class="headerlink" title="团队协作中使用 Prettier"></a>团队协作中使用 Prettier</h3><ul><li><p><strong>prettier 作为开发依赖记录在 package.json 里(npm install prettier -D)，跟着项目走，版本统一，既可以使用官方的默认配置，也可以指定一套内容的配置项。适合团队协作。(在 umi 项目中配置引入‘@umijs/fabric’)</strong></p></li><li><p>在 umi 项目中单独配置 eslint，安装 @umijs/fabric”,在 rc 文件中引入,见参考示例</p></li><li><p><strong>严谨一点来说如果都是使用 vscode 编辑器,可以将规范配置写入到 <code>.vscode/setting.json</code>中用于团队协作共享,在项目根目录没有 prettierrc 文件时，将优先使用此配置,优先级顺序如上</strong></p></li></ul><h3 id="运行-Prettier"><a href="#运行-Prettier" class="headerlink" title="运行 Prettier"></a>运行 Prettier</h3><p>一. 在命令行输入 <code>npx prettier --write .</code> ,表示格式化当前目录下的所有文件</p><p>二. 在 packjson 中 git 集成(npm install pre-commit -D，后面详细展开), 提交代码到暂存区用到 git hook 帮助我们检查</p><p><img src="https://net-bucket-private8-1300342648.cos.ap-singapore.myqcloud.com/809ca012-8207-4ece-ba60-bd54644f1780.png?sign=q-sign-algorithm=sha1&amp;q-ak=AKIDKPFp6A4IzRoVx9roxqRlocATBfI0Rfd6&amp;q-sign-time=1653471180;1653687180&amp;q-key-time=1653471180;1653687180&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=1aad75ac1bc09276de31c0b3ee733c7a7690dc6e"></p><p><img src="https://net-bucket-private8-1300342648.cos.ap-singapore.myqcloud.com/637e4afe-faa1-4fc0-9537-ed75f6f2d69d.png?sign=q-sign-algorithm=sha1&amp;q-ak=AKIDKPFp6A4IzRoVx9roxqRlocATBfI0Rfd6&amp;q-sign-time=1653471186;1653687186&amp;q-key-time=1653471186;1653687186&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=59ac78282f103716cf86bbf2486c49cee10ae01d"></p><p>三. 在 packjson 的 script 中配置指令，</p><p><img src="https://net-bucket-private8-1300342648.cos.ap-singapore.myqcloud.com/1944b7b8-da63-4167-871f-adf3f321a964.png?sign=q-sign-algorithm=sha1&amp;q-ak=AKIDKPFp6A4IzRoVx9roxqRlocATBfI0Rfd6&amp;q-sign-time=1653471197;1653687197&amp;q-key-time=1653471197;1653687197&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=79b7091598301c25b535a30eae1713282795dc5d"></p><p>四. 编辑器中安装 prettier 插件之后，右键格式化选中 prettier 即可格式化当前文件</p><p><img src="https://net-bucket-private8-1300342648.cos.ap-singapore.myqcloud.com/81899d38-3078-4289-a5a2-a67b1977a955.png?sign=q-sign-algorithm=sha1&amp;q-ak=AKIDKPFp6A4IzRoVx9roxqRlocATBfI0Rfd6&amp;q-sign-time=1653471207;1653687207&amp;q-key-time=1653471207;1653687207&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=dd761e0b732db9d35c85c302e8889b884f3caafc"></p><p><img src="https://net-bucket-private8-1300342648.cos.ap-singapore.myqcloud.com/85c956e4-14e0-4970-b2e0-f9268c2d7cd0.png?sign=q-sign-algorithm=sha1&amp;q-ak=AKIDKPFp6A4IzRoVx9roxqRlocATBfI0Rfd6&amp;q-sign-time=1653471220;1653687220&amp;q-key-time=1653471220;1653687220&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=ef4e00339bbdcbb3e26ddc448456eaeae7e95c62"></p><p>或在编辑器配置勾选 format on save 保存文件 Ctrl + s</p><p><img src="https://net-bucket-private8-1300342648.cos.ap-singapore.myqcloud.com/ad1bc569-fe91-4422-8d73-54dd31c78d50.png?sign=q-sign-algorithm=sha1&amp;q-ak=AKIDKPFp6A4IzRoVx9roxqRlocATBfI0Rfd6&amp;q-sign-time=1653471249;1653687249&amp;q-key-time=1653471249;1653687249&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=e61f56c92019f57a6f06114a1177762931375432"></p><p>在 webstorm 中</p><p><img src="https://net-bucket-private8-1300342648.cos.ap-singapore.myqcloud.com/37849bc2-2061-4f82-b2f5-1d2f4594eae5.png?sign=q-sign-algorithm=sha1&amp;q-ak=AKIDKPFp6A4IzRoVx9roxqRlocATBfI0Rfd6&amp;q-sign-time=1653471253;1653687253&amp;q-key-time=1653471253;1653687253&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=ad66b00b5245d38490650efe990e9f0a6b3de185"></p><h3 id="参考示例-1"><a href="#参考示例-1" class="headerlink" title="参考示例"></a>参考示例</h3><p>– .prettierrc.js –</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//引入umi带的prettier配置</span><span class="token keyword">const</span> fabric <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"@umijs/fabric/dist"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token operator">...</span>fabric<span class="token punctuation">.</span>prettier<span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 一行最多 120 字符</span>    printWidth<span class="token punctuation">:</span> <span class="token number">120</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 使用 2 个空格缩进</span>    tabWidth<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 不使用缩进符，而使用空格</span>    useTabs<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 行尾需要有分号</span>    semi<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 使用单引号</span>    singleQuote<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 对象的 key 仅在必要时用引号</span>    quoteProps<span class="token punctuation">:</span> <span class="token string">"as-needed"</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// jsx 不使用单引号，而使用双引号</span>    jsxSingleQuote<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 末尾需要有逗号</span>    trailingComma<span class="token punctuation">:</span> <span class="token string">"all"</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 大括号内的首尾需要空格</span>    bracketSpacing<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// jsx 标签的反尖括号需要换行</span>    jsxBracketSameLine<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 箭头函数，只有一个参数的时候，也需要括号</span>    arrowParens<span class="token punctuation">:</span> <span class="token string">"always"</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 每个文件格式化的范围是文件的全部内容</span>    rangeStart<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    rangeEnd<span class="token punctuation">:</span> <span class="token number">Infinity</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 不需要写文件开头的 @prettier</span>    requirePragma<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 不需要自动在文件开头插入 @prettier</span>    insertPragma<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 使用默认的折行标准</span>    proseWrap<span class="token punctuation">:</span> <span class="token string">"preserve"</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 根据显示样式决定 html 要不要折行</span>    htmlWhitespaceSensitivity<span class="token punctuation">:</span> <span class="token string">"css"</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 换行符使用 lf</span>    endOfLine<span class="token punctuation">:</span> <span class="token string">"lf"</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//每行单个属性</span>    singleAttributePerLine<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h3 id="参考文档-1"><a href="#参考文档-1" class="headerlink" title="参考文档"></a>参考文档</h3><ul><li><p><a href="https://prettier.io/">Prettier 官网</a></p></li><li><p><a href="https://github.com/Tencent/tdesign-vue/blob/develop/.prettierrc.js">tdesign-vue 的仓库</a></p></li><li><p><a href="https://blog.csdn.net/a843334549/article/details/115391605">prettier 格式化代码</a></p></li><li><p><a href="https://blog.csdn.net/lwx931449660/article/details/120437107">Prettier 代码格式化工具使用详解</a></p></li><li><p><a href="http://www.codeforest.cn/article/3069">代码美化神器——Prettier 使用详解</a></p></li><li><p><a href="https://www.lmlphp.com/user/4018/article/item/457649/">vscode 中 eslint prettier 和 eslint-loader 配置关系</a></p></li></ul><h2 id="Eslint"><a href="#Eslint" class="headerlink" title="Eslint"></a>Eslint</h2><h3 id="Eslint-的作用"><a href="#Eslint-的作用" class="headerlink" title="Eslint 的作用"></a>Eslint 的作用</h3><blockquote><p>ESLint 是一个语法规则和代码风格的检查工具，可以用来保证写出语法正确、风格统一的代码。</p></blockquote><h3 id="Eslint-的优先级"><a href="#Eslint-的优先级" class="headerlink" title="Eslint 的优先级"></a>Eslint 的优先级</h3><ul><li><p><strong>类比 Prettier</strong></p></li><li><p>当前目录下的配置文件优先级高于根目录下配置</p></li></ul><h3 id="团队协作使用-Eslint"><a href="#团队协作使用-Eslint" class="headerlink" title="团队协作使用 Eslint"></a>团队协作使用 Eslint</h3><ul><li><p>类比 Prettier(npm install eslint -D),</p></li><li><p>在 umi 项目中单独配置 eslint，安装 @umijs/fabric”: “2.7.0” 这个版本，其他版本有不兼容的问题,在 eslintrc 文件中配置 <code>extends: [require.resolve('@umijs/fabric/dist/eslint')]</code>,在 include 加上.eslintrc.js 解决这个报错 (“parserOptions.project” has been set for @typescript-eslint/parser)</p></li></ul><h3 id="运行-Eslint"><a href="#运行-Eslint" class="headerlink" title="运行 Eslint"></a>运行 Eslint</h3><p>一. npx eslint 文件名 检查某个文件</p><p>二. 在 packjson 中 git 集成(npm install pre-commit -D，后面详细展开), 提交代码到暂存区用到 git hook 帮助我们检查修复</p><p>三. 在 packjson 的 script 中配置检查或修复指令,cli 指令详情见<a href="http://eslint.cn/docs/user-guide/command-line-interface">Eslint cli</a></p><p><img src="https://net-bucket-private8-1300342648.cos.ap-singapore.myqcloud.com/ef129b69-0e52-4789-9a01-8c03ba696637.png?sign=q-sign-algorithm=sha1&amp;q-ak=AKIDKPFp6A4IzRoVx9roxqRlocATBfI0Rfd6&amp;q-sign-time=1653471272;1653687272&amp;q-key-time=1653471272;1653687272&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=669b2d2149b36aa0696d9e03b5bf125383957af7"></p><p>四. 当代码和 eslint 规则不一致时，在文件中有下划波浪线警告</p><p>五. 忽略 eslint 检查,详见 eslint 官网</p><h3 id="参考示例-2"><a href="#参考示例-2" class="headerlink" title="参考示例"></a>参考示例</h3><p>– .eslintrc.js –</p><pre class=" language-javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token keyword">extends</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">'@umijs/fabric/dist/eslint'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'plugin:@typescript-eslint/eslint-recommended'</span><span class="token punctuation">,</span><span class="token string">'plugin:@typescript-eslint/recommended'</span><span class="token punctuation">,</span><span class="token string">'prettier'</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 自定义全局变量</span>globals<span class="token punctuation">:</span> <span class="token punctuation">{</span>ANT_DESIGN_PRO_ONLY_DO_NOT_USE_IN_YOUR_PRODUCTION<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>page<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 添加共享配置</span><span class="token comment" spellcheck="true">// settings: {</span><span class="token comment" spellcheck="true">// 'import/resolver': {</span><span class="token comment" spellcheck="true">// node: {},</span><span class="token comment" spellcheck="true">// },</span><span class="token comment" spellcheck="true">// 'import/extensions': ['.js', '.jsx', '.ts', '.tsx'],</span><span class="token comment" spellcheck="true">// },</span><span class="token comment" spellcheck="true">// 环境配置</span>env<span class="token punctuation">:</span> <span class="token punctuation">{</span>browser<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>node<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>es6<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 解析器配置</span>parserOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>parser<span class="token punctuation">:</span> <span class="token string">'@typescript-eslint/parser'</span><span class="token punctuation">,</span>sourceType<span class="token punctuation">:</span> <span class="token string">'module'</span><span class="token punctuation">,</span>allowImportExportEverywhere<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>ecmaFeatures<span class="token punctuation">:</span> <span class="token punctuation">{</span>jsx<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span>plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'prettier'</span><span class="token punctuation">,</span> <span class="token string">'@typescript-eslint'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>rules<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'prettier/prettier'</span><span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 不允许有声明后未使用的变量或者参数</span><span class="token string">'no-unused-vars'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 外部作用域中的变量不能与它所包含的作用域中的变量或参数同名</span><span class="token string">'no-shadow'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 不允许标识符以下划线开头</span><span class="token string">'no-underscore-dangle'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'error'</span><span class="token punctuation">,</span><span class="token punctuation">{</span>allow<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'_id'</span><span class="token punctuation">,</span> <span class="token string">'_setTreeState'</span><span class="token punctuation">,</span> <span class="token string">'_path'</span><span class="token punctuation">,</span> <span class="token string">'_customReducers'</span><span class="token punctuation">,</span> <span class="token string">'_addId'</span><span class="token punctuation">,</span> <span class="token string">'_addId'</span><span class="token punctuation">,</span> <span class="token string">'_traverse'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 要求声明后从不重新分配的变量的`const`声明</span><span class="token string">'prefer-const'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 比较的时候使用严格等于</span>eqeqeq<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 不允许重新分配函数参数</span><span class="token string">'no-param-reassign'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'error'</span><span class="token punctuation">,</span><span class="token punctuation">{</span>props<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>ignorePropertyModificationsFor<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'values'</span><span class="token punctuation">,</span> <span class="token string">'item'</span><span class="token punctuation">,</span> <span class="token string">'key'</span><span class="token punctuation">,</span> <span class="token string">'obj'</span><span class="token punctuation">,</span> <span class="token string">'newValue'</span><span class="token punctuation">,</span> <span class="token string">'res'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 驼峰命名</span>camelcase<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 不允许new一个实例后不赋值或者不比较</span><span class="token string">'no-new'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 构造函数首字母大写</span><span class="token string">'new-cap'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 禁止可能与比较混淆的箭头函数</span><span class="token string">'no-confusing-arrow'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 函数风格，规定只能使用函数声明或者函数表达式</span><span class="token string">'func-style'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 没有console</span><span class="token string">'no-console'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'error'</span><span class="token punctuation">,</span><span class="token punctuation">{</span>allow<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'warn'</span><span class="token punctuation">,</span> <span class="token string">'error'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 禁止不必要的构造函数</span><span class="token string">'no-useless-constructor'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 不允许使用 ++ -- 运算符</span><span class="token string">'no-plusplus'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'error'</span><span class="token punctuation">,</span><span class="token punctuation">{</span>allowForLoopAfterthoughts<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'no-use-before-define'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">{</span>functions<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>classes<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'no-unused-expressions'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 不允许使用 __proto属性</span><span class="token string">'no-proto'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 无论有没有返回值都强制要求return语句返回一个值</span><span class="token string">'consistent-return'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 不允许指定全局变量</span><span class="token string">'no-restricted-globals'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 在switch语句中需要有default语句</span><span class="token string">'default-case'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 不允许抛出字面量错误 throw "error"</span><span class="token string">'no-throw-literal'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 不允许在return语句中使用分配语句</span><span class="token string">'no-return-assign'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 函数表达式必须有名字</span><span class="token string">'func-names'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 条件语句的条件中不允许出现恒定不变的量</span><span class="token string">'no-constant-condition'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'error'</span><span class="token punctuation">,</span><span class="token punctuation">{</span>checkLoops<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 禁止使用any类型</span><span class="token string">'@typescript-eslint/no-explicit-any'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 不允许调用 require()</span><span class="token string">'@typescript-eslint/no-require-imports'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 不允许使用 require 语句，除了在 import 语句中</span><span class="token string">'@typescript-eslint/no-var-requires'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 如果索引仅用于访问被迭代的数组，则首选“for-of”循环而不是标准“for”循环</span><span class="token string">'@typescript-eslint/prefer-for-of'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 不关闭ts严格模式</span><span class="token string">'@typescript-eslint/ban-ts-ignore'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 禁止使用特定类型</span><span class="token string">'@typescript-eslint/ban-types'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 要求在函数和类方法上有明确的返回类型</span><span class="token string">'@typescript-eslint/explicit-function-return-type'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 要求导出函数和类的公共类方法的显式返回和参数类型</span><span class="token string">'@typescript-eslint/explicit-module-boundary-types'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 禁止空函数</span><span class="token string">'@typescript-eslint/no-empty-function'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 禁止使用 @ts-&lt;directive> 注释或在指令后要求描述</span><span class="token string">'@typescript-eslint/ban-ts-comment'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h3 id="参考文档-2"><a href="#参考文档-2" class="headerlink" title="参考文档"></a>参考文档</h3><ul><li><p><a href="https://eslint.org/">Eslint 官网</a></p></li><li><p><a href="https://www.lmlphp.com/user/4018/article/item/457649/">vscode 中 eslint prettier 和 eslint-loader 配置关系</a></p></li><li><p><a href="http://eslint.cn/docs/user-guide/getting-started">Eslint 规则说明</a></p></li><li><p><a href="https://www.npmjs.com/package/@typescript-eslint/eslint-plugin">@typescript-eslint/eslint-plugin</a></p></li><li><p><a href="https://juejin.cn/post/7067072359995457567">Eslint 使用指南</a></p></li><li><p><a href="https://github.com/Tencent/tdesign-vue/blob/develop/.eslintrc">tdsign-vue</a></p></li></ul><h2 id="Stylelint"><a href="#Stylelint" class="headerlink" title="Stylelint"></a>Stylelint</h2><h3 id="Stylelint-的作用"><a href="#Stylelint-的作用" class="headerlink" title="Stylelint 的作用"></a>Stylelint 的作用</h3><blockquote><p>A mighty, modern linter that helps you avoid errors and enforce conventions in your styles.(一个强大的、现代的 linter，可以帮助你避免错误，并在你的风格中执行惯例),例如 css 的书写顺序</p></blockquote><p>影响浏览器的渲染。正确的书写可以减少浏览器的回流，提升浏览器的 dom 渲染。</p><h3 id="Stylelint-优先级"><a href="#Stylelint-优先级" class="headerlink" title="Stylelint 优先级"></a>Stylelint 优先级</h3><p>类比 Prettier</p><h3 id="运行-Stylelint"><a href="#运行-Stylelint" class="headerlink" title="运行 Stylelint"></a>运行 Stylelint</h3><p>类比 Eslint</p><p>在 packjson 的 script 中配置检查或修复指令,cli 指令详情见<a href="https://stylelint.io/user-guide/usage/cli">stylelint cli</a></p><h3 id="团队协作中使用-stylelint"><a href="#团队协作中使用-stylelint" class="headerlink" title="团队协作中使用 stylelint"></a>团队协作中使用 stylelint</h3><ul><li><p>类比 Prettier(npm i stylelint stylelint-config-standard stylelint-order stylelint-config-prettier -D)</p></li><li><p>在 umi 项目中单独配置 eslint，安装 @umijs/fabric”,在 rc 文件中引入,见参考示例</p></li></ul><h3 id="参考示例-3"><a href="#参考示例-3" class="headerlink" title="参考示例"></a>参考示例</h3><p>– .stylelintrc.js –</p><pre class=" language-javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token keyword">extends</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"@umijs/fabric/dist/stylelint"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    rules<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 不允许较低特异性的选择器出现在覆盖较高特异性的选择器之后</span>        <span class="token string">"no-descending-specificity"</span><span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">//要求或禁止 url 引号</span>        <span class="token string">"function-url-quotes"</span><span class="token punctuation">:</span> <span class="token string">"always"</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 在字符串周围指定单引号或双引号</span>        <span class="token string">"string-quotes"</span><span class="token punctuation">:</span> <span class="token string">"double"</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 为单位指定小写或大写</span>        <span class="token string">"unit-case"</span><span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 为十六进制颜色指定小写或大写</span>        <span class="token string">"color-hex-case"</span><span class="token punctuation">:</span> <span class="token string">"lower"</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 为十六进制颜色指定短符号或长符号</span>        <span class="token string">"color-hex-length"</span><span class="token punctuation">:</span> <span class="token string">"long"</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 在规则之前要求或禁止空行</span>        <span class="token string">"rule-empty-line-before"</span><span class="token punctuation">:</span> <span class="token string">"always"</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 不允许在字体系列名称列表中缺少通用系列</span>        <span class="token string">"font-family-no-missing-generic-family-keyword"</span><span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 在块的左大括号之前需要一个空格或不允许空格</span>        <span class="token string">"block-opening-brace-space-before"</span><span class="token punctuation">:</span> <span class="token string">"always"</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 禁止未知属性</span>        <span class="token string">"property-no-unknown"</span><span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 禁止空源</span>        <span class="token string">"no-empty-source"</span><span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 不允许未知的伪类选择器</span>        <span class="token string">"selector-pseudo-class-no-unknown"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>                ignorePseudoClasses<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"deep"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 属性排序</span>        <span class="token string">"order/properties-order"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token string">"position"</span><span class="token punctuation">,</span>            <span class="token string">"top"</span><span class="token punctuation">,</span>            <span class="token string">"right"</span><span class="token punctuation">,</span>            <span class="token string">"bottom"</span><span class="token punctuation">,</span>            <span class="token string">"left"</span><span class="token punctuation">,</span>            <span class="token string">"z-index"</span><span class="token punctuation">,</span>            <span class="token string">"display"</span><span class="token punctuation">,</span>            <span class="token string">"justify-content"</span><span class="token punctuation">,</span>            <span class="token string">"align-items"</span><span class="token punctuation">,</span>            <span class="token string">"float"</span><span class="token punctuation">,</span>            <span class="token string">"clear"</span><span class="token punctuation">,</span>            <span class="token string">"overflow"</span><span class="token punctuation">,</span>            <span class="token string">"overflow-x"</span><span class="token punctuation">,</span>            <span class="token string">"overflow-y"</span><span class="token punctuation">,</span>            <span class="token string">"width"</span><span class="token punctuation">,</span>            <span class="token string">"min-width"</span><span class="token punctuation">,</span>            <span class="token string">"max-width"</span><span class="token punctuation">,</span>            <span class="token string">"height"</span><span class="token punctuation">,</span>            <span class="token string">"min-height"</span><span class="token punctuation">,</span>            <span class="token string">"max-height"</span><span class="token punctuation">,</span>            <span class="token string">"margin"</span><span class="token punctuation">,</span>            <span class="token string">"margin-top"</span><span class="token punctuation">,</span>            <span class="token string">"margin-right"</span><span class="token punctuation">,</span>            <span class="token string">"margin-bottom"</span><span class="token punctuation">,</span>            <span class="token string">"margin-left"</span><span class="token punctuation">,</span>            <span class="token string">"padding"</span><span class="token punctuation">,</span>            <span class="token string">"padding-top"</span><span class="token punctuation">,</span>            <span class="token string">"padding-right"</span><span class="token punctuation">,</span>            <span class="token string">"padding-bottom"</span><span class="token punctuation">,</span>            <span class="token string">"padding-left"</span><span class="token punctuation">,</span>            <span class="token string">"font-size"</span><span class="token punctuation">,</span>            <span class="token string">"font-family"</span><span class="token punctuation">,</span>            <span class="token string">"font-weight"</span><span class="token punctuation">,</span>            <span class="token string">"border"</span><span class="token punctuation">,</span>            <span class="token string">"border-style"</span><span class="token punctuation">,</span>            <span class="token string">"border-width"</span><span class="token punctuation">,</span>            <span class="token string">"border-color"</span><span class="token punctuation">,</span>            <span class="token string">"border-top"</span><span class="token punctuation">,</span>            <span class="token string">"border-top-style"</span><span class="token punctuation">,</span>            <span class="token string">"border-top-width"</span><span class="token punctuation">,</span>            <span class="token string">"border-top-color"</span><span class="token punctuation">,</span>            <span class="token string">"border-right"</span><span class="token punctuation">,</span>            <span class="token string">"border-right-style"</span><span class="token punctuation">,</span>            <span class="token string">"border-right-width"</span><span class="token punctuation">,</span>            <span class="token string">"border-right-color"</span><span class="token punctuation">,</span>            <span class="token string">"border-bottom"</span><span class="token punctuation">,</span>            <span class="token string">"border-bottom-style"</span><span class="token punctuation">,</span>            <span class="token string">"border-bottom-width"</span><span class="token punctuation">,</span>            <span class="token string">"border-bottom-color"</span><span class="token punctuation">,</span>            <span class="token string">"border-left"</span><span class="token punctuation">,</span>            <span class="token string">"border-left-style"</span><span class="token punctuation">,</span>            <span class="token string">"border-left-width"</span><span class="token punctuation">,</span>            <span class="token string">"border-left-color"</span><span class="token punctuation">,</span>            <span class="token string">"border-radius"</span><span class="token punctuation">,</span>            <span class="token string">"text-align"</span><span class="token punctuation">,</span>            <span class="token string">"text-justify"</span><span class="token punctuation">,</span>            <span class="token string">"text-indent"</span><span class="token punctuation">,</span>            <span class="token string">"text-overflow"</span><span class="token punctuation">,</span>            <span class="token string">"text-decoration"</span><span class="token punctuation">,</span>            <span class="token string">"white-space"</span><span class="token punctuation">,</span>            <span class="token string">"color"</span><span class="token punctuation">,</span>            <span class="token string">"background"</span><span class="token punctuation">,</span>            <span class="token string">"background-position"</span><span class="token punctuation">,</span>            <span class="token string">"background-repeat"</span><span class="token punctuation">,</span>            <span class="token string">"background-size"</span><span class="token punctuation">,</span>            <span class="token string">"background-color"</span><span class="token punctuation">,</span>            <span class="token string">"background-clip"</span><span class="token punctuation">,</span>            <span class="token string">"opacity"</span><span class="token punctuation">,</span>            <span class="token string">"filter"</span><span class="token punctuation">,</span>            <span class="token string">"list-style"</span><span class="token punctuation">,</span>            <span class="token string">"outline"</span><span class="token punctuation">,</span>            <span class="token string">"visibility"</span><span class="token punctuation">,</span>            <span class="token string">"box-shadow"</span><span class="token punctuation">,</span>            <span class="token string">"text-shadow"</span><span class="token punctuation">,</span>            <span class="token string">"resize"</span><span class="token punctuation">,</span>            <span class="token string">"transition"</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h3 id="参考文档-3"><a href="#参考文档-3" class="headerlink" title="参考文档"></a>参考文档</h3><ul><li><p><a href="https://stylelint.io/">stylelint 官网</a></p></li><li><p><a href="https://juejin.cn/post/6995973631238995998">配置 stylelint 自动书写 css 顺序</a></p></li><li><p><a href="https://juejin.cn/post/6844903640549818382">css 代码规范工具 stylelint</a></p></li><li><p><a href="https://juejin.cn/post/6878121082188988430">项目中 Prettier + Stylelint + ESlint 配置</a></p></li></ul><h2 id="commitlint"><a href="#commitlint" class="headerlink" title="commitlint"></a>commitlint</h2><h3 id="commitlint-的作用"><a href="#commitlint-的作用" class="headerlink" title="commitlint 的作用"></a>commitlint 的作用</h3><blockquote><p>在我们提交代码时，先自动帮我们格式化代码，然后使用 eslint 检查代码，并自动修复错误，在修复不了的时候，报错给我们。并且报错后此次的 commit 不会提交。</p></blockquote><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><ul><li>husky</li></ul><p>操作 git 钩子的工具</p><ul><li>lint-staged</li></ul><p>本地暂存代码检查工具</p><ul><li>commitlint</li></ul><p>commit 信息校验工具</p><ul><li>commitizen</li></ul><p>辅助 commit 信息 ,就像这样,通过选择输入,规范提交信息</p><p><img src="/api/project/1077/files/995408/imagePreview" alt="图片"></p><h3 id="安装流程"><a href="#安装流程" class="headerlink" title="安装流程"></a>安装流程</h3><ol><li>安装代码校验依赖</li></ol><pre><code>npm i lint-staged husky -Dnpm set-script prepare "husky install" # 在package.json中添加脚本npm run prepare # 初始化husky,将 git hooks 钩子交由,husky执行</code></pre><p>在 packjson 中新增 husky 指令</p><pre><code>npx husky add .husky/pre-commit "npx lint-staged"</code></pre><p><img src="/api/project/1077/files/995411/imagePreview" alt="图片"></p><p><img src="/api/project/1077/files/995409/imagePreview" alt="图片"></p><ol start="2"><li>安装提交信息依赖</li></ol><pre><code>npm i commitlint @commitlint/config-conventional -Dnpx husky add .husky/commit-msg 'npx --no-install commitlint --edit "$1"'</code></pre><p><img src="/api/project/1077/files/995410/imagePreview" alt="图片"></p><ul><li><code>@commitlint/config-conventional</code> 这是一个规范配置,标识采用什么规范来执行消息校验, 这个默认是 Angular 的提交规范</li></ul><p>build：主要目的是修改项目构建系统(例如 glup，webpack，rollup 的配置等)的提交</p><p>ci：主要目的是修改项目继续集成流程(例如 Travis，Jenkins，GitLab CI，Circle 等)的提交</p><p>docs：文档更新</p><p>feat：新增功能</p><p>merge：分支合并 Merge branch ? of ?</p><p>fix：bug 修复</p><p>perf：性能, 体验优化</p><p>refactor：重构代码(既没有新增功能，也没有修复 bug)</p><p>style：不影响程序逻辑的代码修改(修改空白字符，格式缩进，补全缺失的分号等，没有改变代码逻辑)</p><p>test：新增测试用例或是更新现有测试</p><p>revert：回滚某个更早之前的提交</p><p>chore：其他修改, 比如改变构建流程、或者增加依赖库、工具等</p><ul><li><p><code>commit-msg </code>钩子执行 消息校验</p></li><li><p>我们也可以使用自己写的方法</p></li></ul><p><img src="/api/project/1077/files/995412/imagePreview" alt="图片"></p><h4 id="参考示例-4"><a href="#参考示例-4" class="headerlink" title="参考示例"></a>参考示例</h4><p>– .commitlint.js –</p><pre class=" language-javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    ignores<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>commit<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> commit<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">"init"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token keyword">extends</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"@commitlint/config-conventional"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    rules<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// body begins with blank line</span>        <span class="token string">"body-leading-blank"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"always"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// footer begins with blank line</span>        <span class="token string">"footer-leading-blank"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"always"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// header有值或更少的字符</span>        <span class="token string">"header-max-length"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"always"</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// subject 是空的</span>        <span class="token string">"subject-empty"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"never"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// type 是空的</span>        <span class="token string">"type-empty"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"never"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 定义type类型</span>        <span class="token string">"type-enum"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token number">2</span><span class="token punctuation">,</span>            <span class="token string">"always"</span><span class="token punctuation">,</span>            <span class="token punctuation">[</span>                <span class="token string">"feat"</span><span class="token punctuation">,</span>                <span class="token string">"fix/to"</span><span class="token punctuation">,</span>                <span class="token string">"fix"</span><span class="token punctuation">,</span>                <span class="token string">"to"</span><span class="token punctuation">,</span>                <span class="token string">"perf"</span><span class="token punctuation">,</span>                <span class="token string">"docs"</span><span class="token punctuation">,</span>                <span class="token string">"test"</span><span class="token punctuation">,</span>                <span class="token string">"refactor"</span><span class="token punctuation">,</span>                <span class="token string">"chore"</span><span class="token punctuation">,</span>                <span class="token string">"revert"</span><span class="token punctuation">,</span>                <span class="token string">"sync"</span><span class="token punctuation">,</span>                <span class="token string">"merge"</span><span class="token punctuation">,</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><ol start="3"><li>安装辅助提交依赖</li></ol><pre><code>npm i commitizen cz-conventional-changelog -D</code></pre><ul><li>安装指令和命令行的展示信息</li></ul><pre><code>npm set-script commit "git-cz" # package.json 中添加 commit 指令, 执行 `git-cz` 指令</code></pre><ul><li>编写初始化 commit 指令</li></ul><pre><code>npx commitizen init cz-conventional-changelog --save-dev --save-exact</code></pre><p>初始化命令行的选项信息,不然没有选项</p><ol start="4"><li>自定义提交规范</li></ol><pre><code>npm i -D commitlint-config-cz cz-customizable</code></pre><ul><li><p>新增 <code>.cz-config.js</code></p></li><li><p>package.json 中,将原来 commit 配置,变更为自定义配置</p></li></ul><p><img src="/api/project/1077/files/995413/imagePreview" alt="图片"></p><ol start="5"><li>使用</li></ol><p>用 npm run commit ，packjson 配置信息见扩展</p><h4 id="参考示例-5"><a href="#参考示例-5" class="headerlink" title="参考示例"></a>参考示例</h4><p>– .cz-config.js –</p><pre class=" language-javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// type 类型（定义之后，可通过上下键选择）</span>    types<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span> value<span class="token punctuation">:</span> <span class="token string">"feat"</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string">"feat: 新功能（feature）"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            value<span class="token punctuation">:</span> <span class="token string">"fix"</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">"fix: 产生diff并自动修复此问题。适合于一次提交直接修复问题"</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            value<span class="token punctuation">:</span> <span class="token string">"fix/to"</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">"fix/to: 修复bug，可以是QA发现的BUG，也可以是研发自己发现的BUG"</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            value<span class="token punctuation">:</span> <span class="token string">"to"</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">"to: 只产生diff不自动修复此问题。适合于多次提交。最终修复问题提交时使用fix"</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span> value<span class="token punctuation">:</span> <span class="token string">"docs"</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string">"docs: 文档（documentation）"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            value<span class="token punctuation">:</span> <span class="token string">"refactor"</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">"refactor 重构（即不是新增功能，也不是修改bug的代码变动）"</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span> value<span class="token punctuation">:</span> <span class="token string">"perf"</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string">"perf: 优化相关，比如提升性能、体验"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span> value<span class="token punctuation">:</span> <span class="token string">"test"</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string">"test: 增加测试"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            value<span class="token punctuation">:</span> <span class="token string">"chore"</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">"chore: 构建过程或辅助工具的变动"</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span> value<span class="token punctuation">:</span> <span class="token string">"revert"</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string">"revert: 代码合并"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span> value<span class="token punctuation">:</span> <span class="token string">"merge"</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string">"revert: 回滚 commit"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span> value<span class="token punctuation">:</span> <span class="token string">"sync"</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string">"revert: 同步主线或分支的Bug"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// scope 类型（定义之后，可通过上下键选择）</span>    scopes<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">[</span><span class="token string">"components"</span><span class="token punctuation">,</span> <span class="token string">"组件相关"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span><span class="token string">"page"</span><span class="token punctuation">,</span> <span class="token string">"页面相关"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span><span class="token string">"hooks"</span><span class="token punctuation">,</span> <span class="token string">"hook 相关"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span><span class="token string">"utils"</span><span class="token punctuation">,</span> <span class="token string">"utils 相关"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span><span class="token string">"styles"</span><span class="token punctuation">,</span> <span class="token string">"样式相关"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span><span class="token string">"deps"</span><span class="token punctuation">,</span> <span class="token string">"项目依赖"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span><span class="token string">"auth"</span><span class="token punctuation">,</span> <span class="token string">"对 auth 修改"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span><span class="token string">"other"</span><span class="token punctuation">,</span> <span class="token string">"其他修改"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 如果选择 custom，后面会让你再输入一个自定义的 scope。也可以不设置此项，把后面的 allowCustomScopes 设置为 true</span>        <span class="token punctuation">[</span><span class="token string">"custom"</span><span class="token punctuation">,</span> <span class="token string">"以上都不是？我要自定义"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">[</span>value<span class="token punctuation">,</span> description<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">{</span>            value<span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>value<span class="token punctuation">.</span><span class="token function">padEnd</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>description<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)`</span></span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 是否允许自定义填写 scope，在 scope 选择的时候，会有 empty 和 custom 可以选择。</span>    allowCustomScopes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// allowTicketNumber: false,</span>    <span class="token comment" spellcheck="true">// isTicketNumberRequired: false,</span>    <span class="token comment" spellcheck="true">// ticketNumberPrefix: 'TICKET-',</span>    <span class="token comment" spellcheck="true">// ticketNumberRegExp: '\\d{1,5}',</span>    <span class="token comment" spellcheck="true">// 针对每一个 type 去定义对应的 scopes，例如 fix</span>    <span class="token comment" spellcheck="true">/*scopeOverrides: {fix: [{ name: 'merge' },{ name: 'style' },{ name: 'e2eTest' },{ name: 'unitTest' }]},*/</span>    <span class="token comment" spellcheck="true">// 交互提示信息</span>    messages<span class="token punctuation">:</span> <span class="token punctuation">{</span>        type<span class="token punctuation">:</span> <span class="token string">"确保本次提交遵循 Angular 规范！\n选择你要提交的类型："</span><span class="token punctuation">,</span>        scope<span class="token punctuation">:</span> <span class="token string">"\n选择一个 scope（可选）："</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 选择 scope: custom 时会出下面的提示</span>        customScope<span class="token punctuation">:</span> <span class="token string">"请输入自定义的 scope："</span><span class="token punctuation">,</span>        subject<span class="token punctuation">:</span> <span class="token string">"填写简短精炼的变更描述：\n"</span><span class="token punctuation">,</span>        body<span class="token punctuation">:</span> <span class="token string">'填写更加详细的变更描述（可选）。使用 "|" 换行：\n'</span><span class="token punctuation">,</span>        breaking<span class="token punctuation">:</span> <span class="token string">"列举非兼容性重大的变更（可选）：\n"</span><span class="token punctuation">,</span>        footer<span class="token punctuation">:</span> <span class="token string">"列举出所有变更的 ISSUES CLOSED（可选）。 例如: #31, #34：\n"</span><span class="token punctuation">,</span>        confirmCommit<span class="token punctuation">:</span> <span class="token string">"确认提交？"</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 设置只有 type 选择了 feat 或 fix，才询问 breaking message</span>    allowBreakingChanges<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"feat"</span><span class="token punctuation">,</span> <span class="token string">"fix"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 跳过要询问的步骤</span>    <span class="token comment" spellcheck="true">// skipQuestions: ['body', 'footer'],</span>    subjectLimit<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// subject 限制长度</span>    breaklineChar<span class="token punctuation">:</span> <span class="token string">"|"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 换行符，支持 body 和 footer</span>    <span class="token comment" spellcheck="true">// footerPrefix : 'ISSUES CLOSED:'</span>    <span class="token comment" spellcheck="true">// askForBreakingChangeFirst : true,</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h3 id="参考文档-4"><a href="#参考文档-4" class="headerlink" title="参考文档"></a>参考文档</h3><ul><li><p><a href="https://juejin.cn/post/7038143752036155428">Eslint + Prettier + Husky + Commitlint+ Lint-staged 规范前端工程代码规范</a></p></li><li><p><a href="https://juejin.cn/post/6844904048525574152">使用 husky、commitlint 和 lint-staged 来构建你的前端工作流</a></p></li></ul><h2 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h2><p>当把所有配置 rc 文件配置好发现 eslint 不生效时，应当检查是否有 eslint 相关依赖未安装,</p><p>比如,解决冲突的依赖</p><pre><code>"eslint-config-prettier": "^8.5.0","eslint-plugin-prettier": "^4.0.0",</code></pre><p>或者缺少了 extends 的@umijs/fabric/dist/eslint 中的依赖</p><pre><code>"eslint-plugin-react-hooks": "^4.5.0",</code></pre><p>以下贴出@umijs/fabric/dist/eslint 的配置</p><pre class=" language-javascript"><code class="language-javascript"><span class="token string">"use strict"</span><span class="token punctuation">;</span><span class="token keyword">var</span> __assign <span class="token operator">=</span>    <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__assign<span class="token punctuation">)</span> <span class="token operator">||</span>    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        __assign <span class="token operator">=</span>            Object<span class="token punctuation">.</span>assign <span class="token operator">||</span>            <span class="token keyword">function</span> <span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> s<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">=</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    s <span class="token operator">=</span> arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> p <span class="token keyword">in</span> s<span class="token punctuation">)</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>hasOwnProperty<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">)</span> t<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">return</span> t<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> __assign<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">var</span> __awaiter <span class="token operator">=</span>    <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__awaiter<span class="token punctuation">)</span> <span class="token operator">||</span>    <span class="token keyword">function</span> <span class="token punctuation">(</span>thisArg<span class="token punctuation">,</span> _arguments<span class="token punctuation">,</span> P<span class="token punctuation">,</span> generator<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">function</span> <span class="token function">adopt</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> value <span class="token keyword">instanceof</span> <span class="token class-name">P</span>                <span class="token operator">?</span> value                <span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">P</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token punctuation">(</span>P <span class="token operator">||</span> <span class="token punctuation">(</span>P <span class="token operator">=</span> Promise<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">function</span> <span class="token function">fulfilled</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    <span class="token function">step</span><span class="token punctuation">(</span>generator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">function</span> <span class="token function">rejected</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    <span class="token function">step</span><span class="token punctuation">(</span>generator<span class="token punctuation">[</span><span class="token string">"throw"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">function</span> <span class="token function">step</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>                result<span class="token punctuation">.</span>done                    <span class="token operator">?</span> <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>value<span class="token punctuation">)</span>                    <span class="token punctuation">:</span> <span class="token function">adopt</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>fulfilled<span class="token punctuation">,</span> rejected<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token function">step</span><span class="token punctuation">(</span><span class="token punctuation">(</span>generator <span class="token operator">=</span> generator<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>thisArg<span class="token punctuation">,</span> _arguments <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">var</span> __generator <span class="token operator">=</span>    <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__generator<span class="token punctuation">)</span> <span class="token operator">||</span>    <span class="token keyword">function</span> <span class="token punctuation">(</span>thisArg<span class="token punctuation">,</span> body<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> _ <span class="token operator">=</span> <span class="token punctuation">{</span>                label<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                sent<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> t<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> t<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                trys<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                ops<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            f<span class="token punctuation">,</span>            y<span class="token punctuation">,</span>            t<span class="token punctuation">,</span>            g<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>            <span class="token punctuation">(</span>g <span class="token operator">=</span> <span class="token punctuation">{</span> next<span class="token punctuation">:</span> <span class="token function">verb</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">throw</span><span class="token punctuation">:</span> <span class="token function">verb</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">return</span><span class="token punctuation">:</span> <span class="token function">verb</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token keyword">typeof</span> Symbol <span class="token operator">===</span> <span class="token string">"function"</span> <span class="token operator">&amp;&amp;</span>                <span class="token punctuation">(</span>g<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            g        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">verb</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token punctuation">[</span>n<span class="token punctuation">,</span> v<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">function</span> <span class="token function">step</span><span class="token punctuation">(</span>op<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>f<span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">"Generator is already executing."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>_<span class="token punctuation">)</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>                        <span class="token punctuation">(</span><span class="token punctuation">(</span>f <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        y <span class="token operator">&amp;&amp;</span>                            <span class="token punctuation">(</span>t <span class="token operator">=</span>                                op<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">2</span>                                    <span class="token operator">?</span> y<span class="token punctuation">[</span><span class="token string">"return"</span><span class="token punctuation">]</span>                                    <span class="token punctuation">:</span> op<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>                                    <span class="token operator">?</span> y<span class="token punctuation">[</span><span class="token string">"throw"</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>t <span class="token operator">=</span> y<span class="token punctuation">[</span><span class="token string">"return"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>                                    <span class="token punctuation">:</span> y<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>                            <span class="token operator">!</span><span class="token punctuation">(</span>t <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> op<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>done<span class="token punctuation">)</span>                    <span class="token punctuation">)</span>                        <span class="token keyword">return</span> t<span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">)</span> op <span class="token operator">=</span> <span class="token punctuation">[</span>op<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">2</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token keyword">switch</span> <span class="token punctuation">(</span>op<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">case</span> <span class="token number">0</span><span class="token punctuation">:</span>                        <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>                            t <span class="token operator">=</span> op<span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">4</span><span class="token punctuation">:</span>                            _<span class="token punctuation">.</span>label<span class="token operator">++</span><span class="token punctuation">;</span>                            <span class="token keyword">return</span> <span class="token punctuation">{</span> value<span class="token punctuation">:</span> op<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> done<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">5</span><span class="token punctuation">:</span>                            _<span class="token punctuation">.</span>label<span class="token operator">++</span><span class="token punctuation">;</span>                            y <span class="token operator">=</span> op<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                            op <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                            <span class="token keyword">continue</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">7</span><span class="token punctuation">:</span>                            op <span class="token operator">=</span> _<span class="token punctuation">.</span>ops<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            _<span class="token punctuation">.</span>trys<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">continue</span><span class="token punctuation">;</span>                        <span class="token keyword">default</span><span class="token punctuation">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>                                <span class="token operator">!</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t <span class="token operator">=</span> _<span class="token punctuation">.</span>trys<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> t<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">[</span>t<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>                                <span class="token punctuation">(</span>op<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">6</span> <span class="token operator">||</span> op<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span>                            <span class="token punctuation">)</span> <span class="token punctuation">{</span>                                _ <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                                <span class="token keyword">continue</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>op<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span>t <span class="token operator">||</span> <span class="token punctuation">(</span>op<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">></span> t<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> op<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> t<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                _<span class="token punctuation">.</span>label <span class="token operator">=</span> op<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                                <span class="token keyword">break</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>op<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">6</span> <span class="token operator">&amp;&amp;</span> _<span class="token punctuation">.</span>label <span class="token operator">&lt;</span> t<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                _<span class="token punctuation">.</span>label <span class="token operator">=</span> t<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                                t <span class="token operator">=</span> op<span class="token punctuation">;</span>                                <span class="token keyword">break</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">&amp;&amp;</span> _<span class="token punctuation">.</span>label <span class="token operator">&lt;</span> t<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                _<span class="token punctuation">.</span>label <span class="token operator">=</span> t<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                                _<span class="token punctuation">.</span>ops<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>op<span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token keyword">break</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> _<span class="token punctuation">.</span>ops<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            _<span class="token punctuation">.</span>trys<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">continue</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    op <span class="token operator">=</span> body<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>thisArg<span class="token punctuation">,</span> _<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    op <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> e<span class="token punctuation">]</span><span class="token punctuation">;</span>                    y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>                    f <span class="token operator">=</span> t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>op<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> op<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token punctuation">{</span> value<span class="token punctuation">:</span> op<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">?</span> op<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">,</span> done<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>exports<span class="token punctuation">,</span> <span class="token string">"__esModule"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> value<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"fs"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> tsEslintConfig_1 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./tsEslintConfig"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> parserOptions <span class="token operator">=</span> <span class="token punctuation">{</span>    ecmaFeatures<span class="token punctuation">:</span> <span class="token punctuation">{</span>        jsx<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    babelOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>        presets<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token string">"@babel/preset-env"</span><span class="token punctuation">,</span>            <span class="token string">"@babel/preset-react"</span><span class="token punctuation">,</span>            <span class="token string">"@babel/preset-typescript"</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">[</span><span class="token string">"@babel/plugin-proposal-decorators"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> legacy<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">[</span><span class="token string">"@babel/plugin-proposal-class-properties"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> loose<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    requireConfigFile<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    project<span class="token punctuation">:</span> <span class="token string">"./tsconfig.json"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">var</span> isJsMoreTs <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>path <span class="token operator">===</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        path <span class="token operator">=</span> <span class="token string">"src"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token function">__awaiter</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> fg<span class="token punctuation">,</span> jsFiles<span class="token punctuation">,</span> tsFiles<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">__generator</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>_a<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">switch</span> <span class="token punctuation">(</span>_a<span class="token punctuation">.</span>label<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">case</span> <span class="token number">0</span><span class="token punctuation">:</span>                    fg <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"fast-glob"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token number">4</span> <span class="token comment" spellcheck="true">/*yield*/</span><span class="token punctuation">,</span> <span class="token function">fg</span><span class="token punctuation">(</span>path <span class="token operator">+</span> <span class="token string">"/src/**/*.{js,jsx}"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> deep<span class="token punctuation">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>                    jsFiles <span class="token operator">=</span> _a<span class="token punctuation">.</span><span class="token function">sent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token number">4</span> <span class="token comment" spellcheck="true">/*yield*/</span><span class="token punctuation">,</span> <span class="token function">fg</span><span class="token punctuation">(</span>path <span class="token operator">+</span> <span class="token string">"/src/**/*.{ts,tsx}"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> deep<span class="token punctuation">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>                    tsFiles <span class="token operator">=</span> _a<span class="token punctuation">.</span><span class="token function">sent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token number">2</span> <span class="token comment" spellcheck="true">/*return*/</span><span class="token punctuation">,</span> jsFiles<span class="token punctuation">.</span>length <span class="token operator">></span> tsFiles<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">var</span> isTsProject <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>    path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">"."</span><span class="token punctuation">,</span> <span class="token string">"./tsconfig.json"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>isTsProject<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>        <span class="token function">isJsMoreTs</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>jsMoreTs<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>jsMoreTs<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"这是一个 TypeScript 项目，如果不是请删除 tsconfig.json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token keyword">extends</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"eslint-config-airbnb-base"</span><span class="token punctuation">,</span> <span class="token string">"prettier"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>        isTsProject            <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token string">"plugin:@typescript-eslint/recommended"</span><span class="token punctuation">]</span>            <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"plugin:react/recommended"</span><span class="token punctuation">]</span>    <span class="token punctuation">)</span><span class="token punctuation">,</span>    parser<span class="token punctuation">:</span> isTsProject <span class="token operator">?</span> <span class="token string">"@typescript-eslint/parser"</span> <span class="token punctuation">:</span> <span class="token string">"@babel/eslint-parser"</span><span class="token punctuation">,</span>    plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"eslint-comments"</span><span class="token punctuation">,</span> <span class="token string">"react"</span><span class="token punctuation">,</span> <span class="token string">"jest"</span><span class="token punctuation">,</span> <span class="token string">"unicorn"</span><span class="token punctuation">,</span> <span class="token string">"react-hooks"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    env<span class="token punctuation">:</span> <span class="token punctuation">{</span>        browser<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        node<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        es6<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        mocha<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        jest<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        jasmine<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    rules<span class="token punctuation">:</span> <span class="token function">__assign</span><span class="token punctuation">(</span>        <span class="token punctuation">{</span>            <span class="token string">"react/display-name"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"react/jsx-props-no-spreading"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"react/state-in-constructor"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"react/static-property-placement"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">// Too restrictive: https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/destructuring-assignment.md</span>            <span class="token string">"react/destructuring-assignment"</span><span class="token punctuation">:</span> <span class="token string">"off"</span><span class="token punctuation">,</span>            <span class="token string">"react/jsx-filename-extension"</span><span class="token punctuation">:</span> <span class="token string">"off"</span><span class="token punctuation">,</span>            <span class="token string">"react/no-array-index-key"</span><span class="token punctuation">:</span> <span class="token string">"warn"</span><span class="token punctuation">,</span>            <span class="token string">"react-hooks/rules-of-hooks"</span><span class="token punctuation">:</span> <span class="token string">"error"</span><span class="token punctuation">,</span>            <span class="token string">"react-hooks/exhaustive-deps"</span><span class="token punctuation">:</span> <span class="token string">"warn"</span><span class="token punctuation">,</span>            <span class="token string">"react/require-default-props"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"react/jsx-fragments"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"react/jsx-wrap-multilines"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"react/prop-types"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"react/forbid-prop-types"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"react/sort-comp"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"react/react-in-jsx-scope"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"react/jsx-one-expression-per-line"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"generator-star-spacing"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"function-paren-newline"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"import/no-unresolved"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"import/order"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"import/no-named-as-default"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"import/no-cycle"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"import/prefer-default-export"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"import/no-default-export"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"import/no-extraneous-dependencies"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"import/named"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"import/no-named-as-default-member"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"import/no-duplicates"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"import/no-self-import"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"import/extensions"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"import/no-useless-path-segments"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"jsx-a11y/no-noninteractive-element-interactions"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"jsx-a11y/click-events-have-key-events"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"jsx-a11y/no-static-element-interactions"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"jsx-a11y/anchor-is-valid"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"sort-imports"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"class-methods-use-this"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"no-confusing-arrow"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"linebreak-style"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">// Too restrictive, writing ugly code to defend against a very unlikely scenario: https://eslint.org/docs/rules/no-prototype-builtins</span>            <span class="token string">"no-prototype-builtins"</span><span class="token punctuation">:</span> <span class="token string">"off"</span><span class="token punctuation">,</span>            <span class="token string">"unicorn/prevent-abbreviations"</span><span class="token punctuation">:</span> <span class="token string">"off"</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">// Conflict with prettier</span>            <span class="token string">"arrow-body-style"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"arrow-parens"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"object-curly-newline"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"implicit-arrow-linebreak"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"operator-linebreak"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"eslint-comments/no-unlimited-disable"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"no-param-reassign"</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>            <span class="token string">"space-before-function-paren"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"react/self-closing-comp"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        isTsProject <span class="token operator">?</span> tsEslintConfig_1<span class="token punctuation">.</span><span class="token keyword">default</span> <span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token punctuation">)</span><span class="token punctuation">,</span>    settings<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// support import modules from TypeScript files in JavaScript files</span>        <span class="token string">"import/resolver"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>            node<span class="token punctuation">:</span> <span class="token punctuation">{</span>                extensions<span class="token punctuation">:</span> isTsProject                    <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token string">".js"</span><span class="token punctuation">,</span> <span class="token string">".jsx"</span><span class="token punctuation">,</span> <span class="token string">".ts"</span><span class="token punctuation">,</span> <span class="token string">".tsx"</span><span class="token punctuation">,</span> <span class="token string">".d.ts"</span><span class="token punctuation">]</span>                    <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">".js"</span><span class="token punctuation">,</span> <span class="token string">".jsx"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token string">"import/parsers"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>            <span class="token string">"@typescript-eslint/parser"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">".ts"</span><span class="token punctuation">,</span> <span class="token string">".tsx"</span><span class="token punctuation">,</span> <span class="token string">".d.ts"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token string">"import/extensions"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">".js"</span><span class="token punctuation">,</span> <span class="token string">".mjs"</span><span class="token punctuation">,</span> <span class="token string">".jsx"</span><span class="token punctuation">,</span> <span class="token string">".ts"</span><span class="token punctuation">,</span> <span class="token string">".tsx"</span><span class="token punctuation">,</span> <span class="token string">".d.ts"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">"import/external-module-folders"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"node_modules"</span><span class="token punctuation">,</span> <span class="token string">"node_modules/@types"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        polyfills<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"fetch"</span><span class="token punctuation">,</span> <span class="token string">"Promise"</span><span class="token punctuation">,</span> <span class="token string">"URL"</span><span class="token punctuation">,</span> <span class="token string">"object-assign"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    parserOptions<span class="token punctuation">:</span> parserOptions<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h2 id="冲突"><a href="#冲突" class="headerlink" title="冲突"></a>冲突</h2><h3 id="Prettier-amp-EditorConfig-冲突"><a href="#Prettier-amp-EditorConfig-冲突" class="headerlink" title="Prettier &amp; EditorConfig 冲突"></a>Prettier &amp; EditorConfig 冲突</h3><p><strong>由于编辑器会先应用 EditorConfig 的配置再去读取 Prettier 的配置(当然 vscode 可以关掉)，解决冲突的本质就是<code>避免EditorConfig 与 Prettier 的重复配置</code></strong></p><p>EditorConfig 冲突的选项仅限于</p><pre><code>end_of_lineindent_styleindent_size/tab_widthmax_line_length</code></pre><p>Prettier 冲突的选项仅限于</p><pre><code>endOfLineuseTabstabWidthprintWidth</code></pre><p>所以让这些相对应的配置相同或者删除掉 prettierrc 中的冗余配置即可解决冲突,参考配置详见上文</p><h3 id="Prettier-amp-Eslint-冲突"><a href="#Prettier-amp-Eslint-冲突" class="headerlink" title="Prettier &amp; Eslint 冲突"></a>Prettier &amp; Eslint 冲突</h3><p><strong>冲突的本质在于 eslint 既负责了代码质量检测，又负责了一部分的格式美化工作,格式化部分的部分规则和 prettier 不兼容。</strong></p><ol><li>引入两个插件</li></ol><ul><li><p>eslint-config-prettier 的作用是关闭 eslint 中与 prettier 相互冲突的规则。</p></li><li><p>eslint-plugin-prettier 的作用是赋予 eslint 用 prettier 格式化代码的能力。</p></li></ul><ol start="2"><li>方法一：<code>extends: [require.resolve('@umijs/fabric/dist/eslint'), 'plugin:prettier/recommended'],</code>，配置文件中新增<code>"plugin:prettier/recommended"</code>，关键在于新增加的 plugin:prettier/recommended 这个规则。让我们看看它具体做了什么</li></ol><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// node_modules/eslint-plugin-prettier/eslint-plugin-prettier.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// plugin:prettier/recommended 就是加载这个</span>    configs<span class="token punctuation">:</span> <span class="token punctuation">{</span>        recommended<span class="token punctuation">:</span> <span class="token punctuation">{</span>            <span class="token keyword">extends</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"prettier"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"prettier"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            rules<span class="token punctuation">:</span> <span class="token punctuation">{</span>                <span class="token string">"prettier/prettier"</span><span class="token punctuation">:</span> <span class="token string">"error"</span><span class="token punctuation">,</span>                <span class="token string">"arrow-body-style"</span><span class="token punctuation">:</span> <span class="token string">"off"</span><span class="token punctuation">,</span>                <span class="token string">"prefer-arrow-callback"</span><span class="token punctuation">:</span> <span class="token string">"off"</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 其他的</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><ul><li><p>extends: [‘prettier’]: 通过 eslint-config-prettier 关闭 eslint 和 prettier 相冲突的规则。</p></li><li><p>plugins: [‘prettier’]: 加载 eslint-plugin-prettier，赋予 eslint 用 prettier 格式化文档的功能</p></li><li><p>‘prettier/prettier’: ‘error’: 让代码文件中不符合 prettier 格式化规则的都标记为错误，结合编辑器 eslint 插件便可以看到这些错误被标记为红色，当运行 eslint –fix 命令时，将自动修复这些错误。</p></li></ul><p>方法二： <code>"extends": [require.resolve('@umijs/fabric/dist/eslint'), "prettier"], rules: {'prettier/prettier': "error"},plugins:['prettier']</code>,把 prettier 添加到 extends 数组中， 停用可能与 Prettier 冲突的所有 ESLint 规则。在 plugins 数组中添加 prettier 插件，并设置新建的 prettier 规则为 error，从而达到 prettier 格式错误被当作 ESLint 错误的效果。</p><h3 id="Prettier-amp-Stylelint-冲突"><a href="#Prettier-amp-Stylelint-冲突" class="headerlink" title="Prettier &amp; Stylelint 冲突"></a>Prettier &amp; Stylelint 冲突</h3><p><code>npm install --save-dev stylelint-config-prettier</code></p><p>“extends”: <a href="%E9%9D%9Eumi%E4%B8%AD">“stylelint-config-standard”, “stylelint-config-prettier”</a></p><h3 id="参考文档-5"><a href="#参考文档-5" class="headerlink" title="参考文档"></a>参考文档</h3><ul><li><p><a href="https://juejin.cn/post/7012160233061482532">解决 eslint 和 prettier 之间的冲突</a></p></li><li><p><a href="https://juejin.cn/post/6971783776221265927">让 ESlint、Prettier 和 EditorConfig 互不冲突</a></p></li></ul><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"templatemaster"</span><span class="token punctuation">,</span>    <span class="token property">"private"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"0.0.2"</span><span class="token punctuation">,</span>    <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"start"</span><span class="token operator">:</span> <span class="token string">"umi dev --open"</span><span class="token punctuation">,</span>        <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"umi build"</span><span class="token punctuation">,</span>        <span class="token property">"build:pro"</span><span class="token operator">:</span> <span class="token string">"cross-env UMI_ENV=pro umi build"</span><span class="token punctuation">,</span>        <span class="token property">"postinstall"</span><span class="token operator">:</span> <span class="token string">"umi generate tmp"</span><span class="token punctuation">,</span>        <span class="token property">"webpack"</span><span class="token operator">:</span> <span class="token string">"umi webpack"</span><span class="token punctuation">,</span>        <span class="token property">"prettier:normal"</span><span class="token operator">:</span> <span class="token string">"prettier -c --write ./**/**/*.{js,jsx,less,md,json}"</span><span class="token punctuation">,</span>        <span class="token property">"prettier:ts"</span><span class="token operator">:</span> <span class="token string">"prettier -c --parser=typescript --write ./**/**/*.{ts,tsx}"</span><span class="token punctuation">,</span>        <span class="token property">"test"</span><span class="token operator">:</span> <span class="token string">"umi-test"</span><span class="token punctuation">,</span>        <span class="token property">"test:coverage"</span><span class="token operator">:</span> <span class="token string">"umi-test --coverage"</span><span class="token punctuation">,</span>        <span class="token property">"prepare"</span><span class="token operator">:</span> <span class="token string">"husky install"</span><span class="token punctuation">,</span>        <span class="token property">"lint"</span><span class="token operator">:</span> <span class="token string">"npm run lint:js &amp;&amp; npm run lint:style &amp;&amp; npm run lint:prettier"</span><span class="token punctuation">,</span>        <span class="token property">"lint:lint-staged"</span><span class="token operator">:</span> <span class="token string">"lint-staged"</span><span class="token punctuation">,</span>        <span class="token property">"lint-staged:js"</span><span class="token operator">:</span> <span class="token string">"eslint --ext .js,.jsx,.ts,.tsx --ignore-path .eslintignore ."</span><span class="token punctuation">,</span>        <span class="token property">"lint:js"</span><span class="token operator">:</span> <span class="token string">"eslint --cache --ext .js,.jsx,.ts,.tsx --format=pretty ./src"</span><span class="token punctuation">,</span>        <span class="token property">"lint:style"</span><span class="token operator">:</span> <span class="token string">"stylelint --fix \"</span>src/**/*.(less|css<span class="token punctuation">)</span>"<span class="token punctuation">,</span>        <span class="token property">"lint:prettier"</span><span class="token operator">:</span> <span class="token string">"npm run prettier:normal &amp;&amp; npm run prettier:ts"</span><span class="token punctuation">,</span>        <span class="token property">"lint:fix"</span><span class="token operator">:</span> <span class="token string">"eslint --fix --cache --ext .js,.jsx,.ts,.tsx --format=pretty ./src &amp;&amp; npm run lint:style"</span><span class="token punctuation">,</span>        <span class="token property">"commit"</span><span class="token operator">:</span> <span class="token string">"git add . &amp;&amp; npm run lint:lint-staged &amp;&amp; git-cz"</span><span class="token punctuation">,</span>        <span class="token property">"release"</span><span class="token operator">:</span> <span class="token string">"standard-version"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"lint-staged"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"*.{css,less}"</span><span class="token operator">:</span> <span class="token string">"stylelint"</span><span class="token punctuation">,</span>        <span class="token property">"*.{js,jsx,less,md,json}"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"prettier --write"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"*.ts?(x)"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"prettier --parser=typescript --write"</span><span class="token punctuation">,</span> <span class="token string">"eslint --fix"</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"@emotion/css"</span><span class="token operator">:</span> <span class="token string">"^11.7.1"</span><span class="token punctuation">,</span>        <span class="token property">"@material-ui/core"</span><span class="token operator">:</span> <span class="token string">"^4.8.1"</span><span class="token punctuation">,</span>        <span class="token property">"@types/lodash.debounce"</span><span class="token operator">:</span> <span class="token string">"^4.0.6"</span><span class="token punctuation">,</span>        <span class="token property">"@uiw/react-codemirror"</span><span class="token operator">:</span> <span class="token string">"^3.0.12"</span><span class="token punctuation">,</span>        <span class="token property">"@umijs/plugin-esbuild"</span><span class="token operator">:</span> <span class="token string">"^1.4.1"</span><span class="token punctuation">,</span>        <span class="token property">"@umijs/preset-react"</span><span class="token operator">:</span> <span class="token string">"1.x"</span><span class="token punctuation">,</span>        <span class="token property">"ace-builds"</span><span class="token operator">:</span> <span class="token string">"^1.4.12"</span><span class="token punctuation">,</span>        <span class="token property">"axios"</span><span class="token operator">:</span> <span class="token string">"^0.21.1"</span><span class="token punctuation">,</span>        <span class="token property">"codemirror"</span><span class="token operator">:</span> <span class="token string">"^5.62.2"</span><span class="token punctuation">,</span>        <span class="token property">"echarts"</span><span class="token operator">:</span> <span class="token string">"^5.2.2"</span><span class="token punctuation">,</span>        <span class="token property">"echarts-for-react"</span><span class="token operator">:</span> <span class="token string">"^3.0.2"</span><span class="token punctuation">,</span>        <span class="token property">"file-saver"</span><span class="token operator">:</span> <span class="token string">"^2.0.5"</span><span class="token punctuation">,</span>        <span class="token property">"final-form"</span><span class="token operator">:</span> <span class="token string">"^4.20.2"</span><span class="token punctuation">,</span>        <span class="token property">"global"</span><span class="token operator">:</span> <span class="token string">"^4.4.0"</span><span class="token punctuation">,</span>        <span class="token property">"js-yaml"</span><span class="token operator">:</span> <span class="token string">"^4.1.0"</span><span class="token punctuation">,</span>        <span class="token property">"lodash"</span><span class="token operator">:</span> <span class="token string">"^4.17.21"</span><span class="token punctuation">,</span>        <span class="token property">"lodash.clonedeep"</span><span class="token operator">:</span> <span class="token string">"^4.5.0"</span><span class="token punctuation">,</span>        <span class="token property">"lodash.debounce"</span><span class="token operator">:</span> <span class="token string">"^4.0.8"</span><span class="token punctuation">,</span>        <span class="token property">"lodash.forin"</span><span class="token operator">:</span> <span class="token string">"^4.4.0"</span><span class="token punctuation">,</span>        <span class="token property">"moment"</span><span class="token operator">:</span> <span class="token string">"^2.29.1"</span><span class="token punctuation">,</span>        <span class="token property">"monaco-editor"</span><span class="token operator">:</span> <span class="token string">"0.27.0"</span><span class="token punctuation">,</span>        <span class="token property">"monaco-editor-webpack-plugin"</span><span class="token operator">:</span> <span class="token string">"^4.1.1"</span><span class="token punctuation">,</span>        <span class="token property">"oit-permission"</span><span class="token operator">:</span> <span class="token string">"^0.1.4"</span><span class="token punctuation">,</span>        <span class="token property">"oit-style"</span><span class="token operator">:</span> <span class="token string">"^1.0.28"</span><span class="token punctuation">,</span>        <span class="token property">"react-ace"</span><span class="token operator">:</span> <span class="token string">"^9.4.3"</span><span class="token punctuation">,</span>        <span class="token property">"react-final-form"</span><span class="token operator">:</span> <span class="token string">"^6.5.3"</span><span class="token punctuation">,</span>        <span class="token property">"react-folder-tree"</span><span class="token operator">:</span> <span class="token string">"^5.0.3"</span><span class="token punctuation">,</span>        <span class="token property">"react-hook-form"</span><span class="token operator">:</span> <span class="token string">"^7.8.8"</span><span class="token punctuation">,</span>        <span class="token property">"react-intl"</span><span class="token operator">:</span> <span class="token string">"^5.20.6"</span><span class="token punctuation">,</span>        <span class="token property">"react-json-view"</span><span class="token operator">:</span> <span class="token string">"^1.21.3"</span><span class="token punctuation">,</span>        <span class="token property">"react-monaco-editor"</span><span class="token operator">:</span> <span class="token string">"^0.47.0"</span><span class="token punctuation">,</span>        <span class="token property">"react-syntax-highlighter"</span><span class="token operator">:</span> <span class="token string">"^15.4.3"</span><span class="token punctuation">,</span>        <span class="token property">"tea-component"</span><span class="token operator">:</span> <span class="token string">"^2.6.22"</span><span class="token punctuation">,</span>        <span class="token property">"umi"</span><span class="token operator">:</span> <span class="token string">"^3.4.25"</span><span class="token punctuation">,</span>        <span class="token property">"use-tree-state"</span><span class="token operator">:</span> <span class="token string">"^1.1.1"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"resolutions"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"jss"</span><span class="token operator">:</span> <span class="token string">"10.0.0"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"@babel/standalone"</span><span class="token operator">:</span> <span class="token string">"^7.14.8"</span><span class="token punctuation">,</span>        <span class="token property">"@commitlint/cli"</span><span class="token operator">:</span> <span class="token string">"^16.2.3"</span><span class="token punctuation">,</span>        <span class="token property">"@commitlint/config-conventional"</span><span class="token operator">:</span> <span class="token string">"^16.2.1"</span><span class="token punctuation">,</span>        <span class="token property">"@material-ui/core"</span><span class="token operator">:</span> <span class="token string">"^4.8.1"</span><span class="token punctuation">,</span>        <span class="token property">"@types/file-saver"</span><span class="token operator">:</span> <span class="token string">"^2.0.3"</span><span class="token punctuation">,</span>        <span class="token property">"@types/react"</span><span class="token operator">:</span> <span class="token string">"^17.0.0"</span><span class="token punctuation">,</span>        <span class="token property">"@types/react-dom"</span><span class="token operator">:</span> <span class="token string">"^17.0.0"</span><span class="token punctuation">,</span>        <span class="token property">"@uiw/react-codemirror"</span><span class="token operator">:</span> <span class="token string">"^3.0.12"</span><span class="token punctuation">,</span>        <span class="token property">"@umijs/fabric"</span><span class="token operator">:</span> <span class="token string">"2.7.0"</span><span class="token punctuation">,</span>        <span class="token property">"@umijs/plugin-qiankun"</span><span class="token operator">:</span> <span class="token string">"^2.25.1"</span><span class="token punctuation">,</span>        <span class="token property">"@umijs/test"</span><span class="token operator">:</span> <span class="token string">"^3.4.25"</span><span class="token punctuation">,</span>        <span class="token property">"babel-loader"</span><span class="token operator">:</span> <span class="token string">"^8.2.5"</span><span class="token punctuation">,</span>        <span class="token property">"cache-loader"</span><span class="token operator">:</span> <span class="token string">"^4.1.0"</span><span class="token punctuation">,</span>        <span class="token property">"check-prettier"</span><span class="token operator">:</span> <span class="token string">"1.0.3"</span><span class="token punctuation">,</span>        <span class="token property">"codemirror"</span><span class="token operator">:</span> <span class="token string">"^5.62.2"</span><span class="token punctuation">,</span>        <span class="token property">"commitizen"</span><span class="token operator">:</span> <span class="token string">"^4.2.4"</span><span class="token punctuation">,</span>        <span class="token property">"cross-env"</span><span class="token operator">:</span> <span class="token string">"^7.0.3"</span><span class="token punctuation">,</span>        <span class="token property">"css-loader"</span><span class="token operator">:</span> <span class="token string">"^6.2.0"</span><span class="token punctuation">,</span>        <span class="token property">"cz-customizable"</span><span class="token operator">:</span> <span class="token string">"^6.3.0"</span><span class="token punctuation">,</span>        <span class="token property">"eslint-config-prettier"</span><span class="token operator">:</span> <span class="token string">"^8.5.0"</span><span class="token punctuation">,</span>        <span class="token property">"eslint-plugin-prettier"</span><span class="token operator">:</span> <span class="token string">"^4.0.0"</span><span class="token punctuation">,</span>        <span class="token property">"eslint-plugin-react-hooks"</span><span class="token operator">:</span> <span class="token string">"^4.3.0"</span><span class="token punctuation">,</span>        <span class="token property">"happypack"</span><span class="token operator">:</span> <span class="token string">"^5.0.1"</span><span class="token punctuation">,</span>        <span class="token property">"husky"</span><span class="token operator">:</span> <span class="token string">"^7.0.4"</span><span class="token punctuation">,</span>        <span class="token property">"lint-staged"</span><span class="token operator">:</span> <span class="token string">"^10.0.7"</span><span class="token punctuation">,</span>        <span class="token property">"mini-css-extract-plugin"</span><span class="token operator">:</span> <span class="token string">"^2.1.0"</span><span class="token punctuation">,</span>        <span class="token property">"open-browser-webpack-plugin"</span><span class="token operator">:</span> <span class="token string">"^0.0.5"</span><span class="token punctuation">,</span>        <span class="token property">"prettier"</span><span class="token operator">:</span> <span class="token string">"2.6.2"</span><span class="token punctuation">,</span>        <span class="token property">"raw-loader"</span><span class="token operator">:</span> <span class="token string">"^4.0.2"</span><span class="token punctuation">,</span>        <span class="token property">"react"</span><span class="token operator">:</span> <span class="token string">"17.x"</span><span class="token punctuation">,</span>        <span class="token property">"react-dom"</span><span class="token operator">:</span> <span class="token string">"17.x"</span><span class="token punctuation">,</span>        <span class="token property">"typescript"</span><span class="token operator">:</span> <span class="token string">"^4.1.2"</span><span class="token punctuation">,</span>        <span class="token property">"yorkie"</span><span class="token operator">:</span> <span class="token string">"^2.0.0"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"config"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"commitizen"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"node_modules/cz-customizable"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="ignore-文件"><a href="#ignore-文件" class="headerlink" title="ignore 文件"></a>ignore 文件</h3><h4 id="eslintignore"><a href="#eslintignore" class="headerlink" title="eslintignore"></a>eslintignore</h4><pre><code>/configpublicdist.umi.umi-production.umi-testmock.eslintrc.jstypings.d.ts</code></pre><h4 id="prettierignore"><a href="#prettierignore" class="headerlink" title="prettierignore"></a>prettierignore</h4><pre><code>**/*.md**/*.svg*.png*.toml**/*.ejs**/*.htmlpackage.json.umi.umi-production.umi-test/distdocker.dockerignoreDockerfile*.DS_Store.eslintignore.prettierignoreLICENSE.eslintcache*.lockyarn-error.log.historyCNAME/build/public</code></pre><h4 id="stylelintignore"><a href="#stylelintignore" class="headerlink" title="stylelintignore"></a>stylelintignore</h4><pre><code>*.js*.jsx*.ts*.tsx*.png*.eot*.ttf*.woff**/*.md**/*.svg*.toml**/*.ejs**/*.htmlpackage.json.umi.umi-production.umi-test/distdocker.dockerignoreDockerfile*.DS_Store.eslintignore.prettierignoreLICENSE.eslintcache*.lockyarn-error.log.historyCNAME/build/public.stylelintignore</code></pre><h3 id="编辑器的-lint-配置"><a href="#编辑器的-lint-配置" class="headerlink" title="编辑器的 lint 配置"></a>编辑器的 lint 配置</h3><ul><li><a href="https://juejin.cn/post/6933009968710811661">一键格式化代码带来的快感 | 你还在为每个项目配置 Stylelint 和 Eslint 吗</a></li></ul><h3 id="release-工具"><a href="#release-工具" class="headerlink" title="release 工具"></a>release 工具</h3><pre><code>npm install standard-version --save-dev</code></pre><h3 id="Eslint-配置解释"><a href="#Eslint-配置解释" class="headerlink" title="Eslint 配置解释"></a>Eslint 配置解释</h3><ul><li><p><a href="https://juejin.cn/post/6859291468138774535">Eslint 中 plugins 和 extends 的区别</a></p></li><li><p><a href="https://www.jianshu.com/p/18b27d97a5e7">eslint 各配置项详解</a></p></li></ul><p>运行 npm run release 即可 生成<code>tag</code>标签,并且生成 <code>CHANGELOG.md</code>文件</p><p><img src="/api/project/1077/files/995446/imagePreview" alt="图片"></p><h2 id="团队协作开发参考文档"><a href="#团队协作开发参考文档" class="headerlink" title="团队协作开发参考文档"></a>团队协作开发参考文档</h2><ul><li><p><a href="https://blog.csdn.net/liusuyun_1/article/details/119580988">团队协作开发之 prettier,eslint,husky,commitlint</a></p></li><li><p><a href="https://www.cnblogs.com/goloving/p/16170600.html">实现团队协作代码规范</a></p></li><li><p><a href="https://www.jianshu.com/p/634241931541">umi 项目添加代码规范工具</a></p></li><li><p><a href="https://juejin.cn/post/7089717571699605540">umi 配置</a></p></li><li><p><a href="https://juejin.cn/post/7085257325165936648">我是如何带领团队从零到一建立前端规范的？</a></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>webpack常见优化</title>
      <link href="/2022/05/26/webpack-chang-jian-you-hua/"/>
      <url>/2022/05/26/webpack-chang-jian-you-hua/</url>
      
        <content type="html"><![CDATA[<h3 id="引入模式"><a href="#引入模式" class="headerlink" title="引入模式"></a>引入模式</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// es module</span><span class="token keyword">import</span> Header <span class="token keyword">from</span> <span class="token string">"./header.js"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> Header<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// common js</span><span class="token keyword">var</span> Header <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./header.js"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> Header<span class="token punctuation">;</span></code></pre><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><ul><li><p>npm install webpack webpack-cli -g (全局安装)</p></li><li><p>npx webpack -v (显示当前目录 webpack version)</p></li><li><p>npm info webpack (npm info history)</p></li></ul><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><ul><li><p>webpack.config.js (默认文件名字)</p></li><li><p>如果不要用默认名字，可以用 webpack –config thenameuwant.js</p></li></ul><h3 id="What-is-Loader"><a href="#What-is-Loader" class="headerlink" title="What is Loader"></a>What is Loader</h3><ul><li><p>npm install file-loader -D (用在图片)</p></li><li><p>npm install url-loader -D (差别就是图片可以已 base64 直接打包在 bundle, 推荐使用这个)</p></li></ul><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// example using file loader handle image</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>module<span class="token punctuation">:</span> <span class="token punctuation">{</span>rules<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>test<span class="token punctuation">:</span> <span class="token regex">/\.(jpg|png|gif)$/</span><span class="token punctuation">,</span>use<span class="token punctuation">:</span> <span class="token punctuation">{</span>loader<span class="token punctuation">:</span> <span class="token string">"url-loader"</span><span class="token punctuation">,</span>options<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// 其他配置</span><span class="token comment" spellcheck="true">// placeholder 占位符</span>name<span class="token punctuation">:</span> <span class="token string">"[name].[ext]"</span><span class="token punctuation">,</span>outputPath<span class="token punctuation">:</span> <span class="token string">"images/"</span><span class="token punctuation">,</span>limit<span class="token punctuation">:</span> <span class="token number">2048</span> <span class="token comment" spellcheck="true">// 大过这个size 生成在images folder 里面</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// scss loader</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>test<span class="token punctuation">:</span> <span class="token regex">/\.scss$/</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 打包顺序-> postcss, sass, css, style 从下往上</span>use<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token comment" spellcheck="true">// style-loader is used for 挂载</span><span class="token string">"style-loader"</span><span class="token punctuation">,</span><span class="token punctuation">{</span>loader<span class="token punctuation">:</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span>options<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// 为了解决import scss in scss file,</span><span class="token comment" spellcheck="true">// 如果不加import loaders</span><span class="token comment" spellcheck="true">// 会直接执行 css skip sass and postcss loader</span>importLoaders<span class="token punctuation">:</span> <span class="token number">2</span><span class="token comment" spellcheck="true">// 模块化引入css</span>modules<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">"sass-loader"</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// help us add prefix: -m, -webkit, etc ...</span><span class="token string">"postcss-loader"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// postcss.config.js 加前缀</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"autoprefixer"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 字体加载</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>test<span class="token punctuation">:</span> <span class="token regex">/\.(eot|ttf|svg|woff|woff2)$/</span><span class="token punctuation">,</span>use<span class="token punctuation">:</span> <span class="token punctuation">{</span>loader<span class="token punctuation">:</span> <span class="token string">"file-loader"</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="Webpack-Plugins-D-x3D-–save-dev"><a href="#Webpack-Plugins-D-x3D-–save-dev" class="headerlink" title="Webpack Plugins (-D = –save-dev)"></a>Webpack Plugins (-D = –save-dev)</h3><ul><li><p>plugins 会在某个时刻帮你做一些设定或事情</p></li><li><p>htmlWebpackPlugin 会在打包结束后，生成一个 html 文件，并把生成 js 放到 html 里面</p></li></ul><pre class=" language-js"><code class="language-js">npm install html<span class="token operator">-</span>webpack<span class="token operator">-</span>plugin <span class="token operator">-</span>D<span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span><span class="token punctuation">{</span>plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token comment" spellcheck="true">// html 模版</span><span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>template<span class="token punctuation">:</span> <span class="token string">"src/index.html"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">}</span></code></pre><ul><li>cleanWebpackPlugin clean the old one before generate new one</li></ul><pre class=" language-js"><code class="language-js">npm install clean<span class="token operator">-</span>webpack<span class="token operator">-</span>plugin <span class="token operator">-</span>D<span class="token keyword">const</span> <span class="token punctuation">{</span> CleanWebpackPlugin <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"clean-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span><span class="token punctuation">{</span>plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token comment" spellcheck="true">// 打包之前先清除dist folder</span><span class="token keyword">new</span> <span class="token class-name">CleanWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">}</span></code></pre><h3 id="Entry-and-output-basic-setup"><a href="#Entry-and-output-basic-setup" class="headerlink" title="Entry and output basic setup"></a>Entry and output basic setup</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// entry</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>main<span class="token punctuation">:</span> <span class="token string">"./src/index.js"</span><span class="token punctuation">,</span>sub<span class="token punctuation">:</span> <span class="token string">"./src/index.js"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// output</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>output<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// 这个是给你加前面的path</span>publicPath<span class="token punctuation">:</span> <span class="token string">"http://cdn.com"</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 这个可以依据entry修改file名</span>filename<span class="token punctuation">:</span> <span class="token string">"[name].js"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//dest file name,</span>chunkFilename<span class="token punctuation">:</span> <span class="token string">'[name].chunk.js'</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">//main.js异步加载的间接的js文件。用来打包import('module')方法中引入的模块</span>path<span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"dist"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//dest folder name</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// based on top settings it will generate below result</span><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"http://cdn.com/main.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"http://cdn.com/sub.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="sourcemap-setup"><a href="#sourcemap-setup" class="headerlink" title="sourcemap setup"></a>sourcemap setup</h3><ul><li>sourcemap 解决打包出错提示源代码的位置</li></ul><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// source map 会生成.map 文件</span><span class="token comment" spellcheck="true">// inline 会把.map 合拼</span><span class="token comment" spellcheck="true">// cheap 只管理业务代码, 会显示第几行错了</span><span class="token comment" spellcheck="true">// module 会管除了业务代码，loader那些也一起</span><span class="token comment" spellcheck="true">// production cheap-module-source-map</span><span class="token comment" spellcheck="true">// development cheap-module-eval-source-map</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    devtool<span class="token punctuation">:</span> <span class="token string">"cheap-module-eval-source-map"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h3 id="webpack-dev-server"><a href="#webpack-dev-server" class="headerlink" title="webpack dev server"></a>webpack dev server</h3><ul><li>build local server</li></ul><pre class=" language-js"><code class="language-js">npm install webpack<span class="token operator">-</span>dev<span class="token operator">-</span>server <span class="token operator">-</span>Dmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>devServer<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// the folder to run the local host</span>contentBase<span class="token punctuation">:</span> <span class="token string">"./dist"</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// open true means auto open browser and point to the localhost</span>open<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h3 id="Hot-Module-Replacement-HMR"><a href="#Hot-Module-Replacement-HMR" class="headerlink" title="Hot Module Replacement (HMR)"></a>Hot Module Replacement (HMR)</h3><ul><li>update css only replace component instead refresh entire page</li></ul><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// index (enable hmr)</span><span class="token keyword">if</span> <span class="token punctuation">(</span>module<span class="token punctuation">.</span>hot<span class="token punctuation">)</span> <span class="token punctuation">{</span>    module<span class="token punctuation">.</span>hot<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token string">"./number"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"number"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"number"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">number</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"webpack"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    devServer<span class="token punctuation">:</span> <span class="token punctuation">{</span>        hot<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        hotOnly<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token comment" spellcheck="true">// 热更新</span>        <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>HotModuleReplacementPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h3 id="ES6-to-ES5-for-older-browser-support-use-babel"><a href="#ES6-to-ES5-for-older-browser-support-use-babel" class="headerlink" title="ES6 to ES5 for older browser support (use babel)"></a>ES6 to ES5 for older browser support (use babel)</h3><pre class=" language-js"><code class="language-js">npm install <span class="token operator">--</span>save<span class="token operator">-</span>dev babel<span class="token operator">-</span>loader @babel<span class="token operator">/</span>corenpm install @babel<span class="token operator">/</span>preset<span class="token operator">-</span>env <span class="token operator">--</span>save<span class="token operator">-</span>devnpm install <span class="token operator">--</span>save @babel<span class="token operator">/</span>polyfill<span class="token comment" spellcheck="true">// index.js</span><span class="token keyword">import</span> <span class="token string">"@babel/polyfill"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// webpack.config.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span><span class="token punctuation">{</span>module<span class="token punctuation">:</span> <span class="token punctuation">{</span>rules<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>test<span class="token punctuation">:</span> <span class="token regex">/\.js$/</span><span class="token punctuation">,</span>exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>loader<span class="token punctuation">:</span> <span class="token string">"babel-loader"</span><span class="token punctuation">,</span>options<span class="token punctuation">:</span> <span class="token punctuation">{</span>presets<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"@babel/preset-env"</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">// polyfills are automatically imported when needed.</span><span class="token comment" spellcheck="true">// make the size smaller</span>useBuiltIns<span class="token punctuation">:</span> <span class="token string">"usage"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><h3 id="Preset-React"><a href="#Preset-React" class="headerlink" title="Preset-React"></a>Preset-React</h3><pre class=" language-js"><code class="language-js">npm install <span class="token operator">--</span>save<span class="token operator">-</span>dev @babel<span class="token operator">/</span>preset<span class="token operator">-</span>react<span class="token comment" spellcheck="true">// .babelrc</span><span class="token punctuation">{</span><span class="token string">"presets"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"@babel/preset-react"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// example if u have two preset</span><span class="token comment" spellcheck="true">// it will read start from below c->b->a</span><span class="token punctuation">{</span><span class="token string">"presets"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"@babel/preset-a"</span><span class="token punctuation">,</span><span class="token string">"@babel/preset-b"</span><span class="token punctuation">,</span><span class="token string">"@babel/preset-c"</span><span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><h3 id="Tree-Shaking"><a href="#Tree-Shaking" class="headerlink" title="Tree Shaking"></a>Tree Shaking</h3><ul><li><p>only extract used modules</p></li><li><p>only support es module, not support commonJS</p></li><li><p>update setting in packagejson sideEffects (polyfill and css no need tree shaking)</p></li><li><p>in production no need setup optimization for tree shaking it will add by default</p></li></ul><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// math.js</span><span class="token keyword">const</span> add <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> minus <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// index.js</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// when go to bundle u still can find minus have been bundled</span><span class="token comment" spellcheck="true">// Tree shaking implementation</span><span class="token comment" spellcheck="true">// webpack.config.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>usedExports<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// package.json</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">// can accept array</span><span class="token comment" spellcheck="true">// sideEffects: ["@babel/poly-fill","*.css"]</span><span class="token string">"sideEffects"</span><span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token punctuation">}</span></code></pre><h3 id="Development-vs-Production-Bundling-Setting"><a href="#Development-vs-Production-Bundling-Setting" class="headerlink" title="Development vs Production Bundling Setting"></a>Development vs Production Bundling Setting</h3><ul><li><p>seperate dev and prod.js</p></li><li><p>npm install webpack-merge -D</p></li></ul><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// package json update command</span><span class="token punctuation">{</span><span class="token string">"scripts"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">"dev"</span><span class="token punctuation">:</span> <span class="token string">"webpack-dev-server --config webpack.dev.js"</span><span class="token punctuation">,</span><span class="token string">"prod"</span><span class="token punctuation">:</span> <span class="token string">"webpack --config webpack.prod.js"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// webpack.prod.js</span><span class="token keyword">const</span> merge <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"webpack-merge"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 共用的放这里</span><span class="token keyword">const</span> commonConfig <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./webpack.common.js"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> prodConfig <span class="token operator">=</span> <span class="token punctuation">{</span>mode<span class="token punctuation">:</span> <span class="token string">"production"</span><span class="token punctuation">,</span>devtool<span class="token punctuation">:</span> <span class="token string">"cheap-module-source-map"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>commonConfig<span class="token punctuation">,</span> prodConfig<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="Code-splitting"><a href="#Code-splitting" class="headerlink" title="Code splitting"></a>Code splitting</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// lets say business logic is 1mb, third party is 1mb</span><span class="token comment" spellcheck="true">// it will bundle to main.js (total 2mb)</span><span class="token comment" spellcheck="true">// when we update business logic, user need reload (2mb)</span><span class="token comment" spellcheck="true">// but with code splitting</span><span class="token comment" spellcheck="true">// we bundle two js file one(business logic), one(third party)</span><span class="token comment" spellcheck="true">// when we update business logic, since thiry party remain same</span><span class="token comment" spellcheck="true">// user only need reload (1mb which is business logic js file)</span><span class="token comment" spellcheck="true">// example</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>businesslogic<span class="token punctuation">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>thirdparty<span class="token punctuation">:</span> <span class="token string">'./src/thirdparty.js'</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// two way doing code splitting</span><span class="token comment" spellcheck="true">// sync method: setting optimization in webpack.common.js</span><span class="token comment" spellcheck="true">// webpack setting enable code splitting</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>splitChunks<span class="token punctuation">:</span> <span class="token punctuation">{</span>chunks<span class="token punctuation">:</span> <span class="token string">"all"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// async method: return import (not need do any changes)</span><span class="token keyword">function</span> <span class="token function">getComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'lodash'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token punctuation">:</span> _ <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span><span class="token keyword">var</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>element<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> element<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">getComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>element <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// package.json (写这个目的是可以产出打包文件)</span><span class="token punctuation">{</span><span class="token string">"scripts"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">"dev-build"</span><span class="token punctuation">:</span> <span class="token string">"webpack --config webpack.dev.js"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// webpack.common.js 想要回去上一级目录</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>output<span class="token punctuation">:</span> <span class="token punctuation">{</span>path<span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"../dist"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 意思是去dist上一级</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 遇到cleanwebpack plugin show skipping error</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token comment" spellcheck="true">// 打包之前先清除dist folder</span><span class="token keyword">new</span> <span class="token class-name">CleanWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'dist'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>root<span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'../'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 这个意思是把root设成上一级再清除该级下的dist folder</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// used for dynamic import</span>npm install babel<span class="token operator">-</span>plugin<span class="token operator">-</span>dynamic<span class="token operator">-</span><span class="token keyword">import</span><span class="token operator">-</span>webpack <span class="token operator">-</span>D<span class="token comment" spellcheck="true">// babelrc</span><span class="token punctuation">{</span><span class="token string">"plugins"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"dynamic-import-webpack"</span><span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><h3 id="Split-chunks-plugins"><a href="#Split-chunks-plugins" class="headerlink" title="Split chunks plugins"></a>Split chunks plugins</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// official dynamic import plugin</span>npm install <span class="token operator">--</span>save<span class="token operator">-</span>dev @babel<span class="token operator">/</span>plugin<span class="token operator">-</span>syntax<span class="token operator">-</span>dynamic<span class="token operator">-</span><span class="token keyword">import</span><span class="token comment" spellcheck="true">// babelrc</span><span class="token punctuation">{</span><span class="token string">"plugins"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"@babel/plugin-syntax-dynamic-import"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// index.js inside that webpackChunkName is how u define the file name</span><span class="token keyword">function</span> <span class="token function">getComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token comment" spellcheck="true">/* webpackChunkName:"lodash" */</span> <span class="token string">"lodash"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token punctuation">:</span> _ <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span><span class="token keyword">var</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>element<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> element<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// webpack.common.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>splitChunks<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// chunks: "all", // 异步同步都适用</span><span class="token comment" spellcheck="true">// chunks: "initial", // 同步</span>chunks<span class="token punctuation">:</span> <span class="token string">"async"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 异步</span>minSize<span class="token punctuation">:</span> <span class="token number">30000</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 这个表示大过30kb就分割代码</span>minChunks<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 至少用一次就分割</span>maxAsyncRequests<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>maxInitialRequests<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>automaticNameDelimiter<span class="token punctuation">:</span> <span class="token string">"~"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 文件连接符号</span>automaticNameMaxLength<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span>name<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>cacheGroups<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// 当档案同时符合vendors default will based on priority decide using which one -10 > -20</span>vendors<span class="token punctuation">:</span> <span class="token punctuation">{</span>test<span class="token punctuation">:</span> <span class="token regex">/[\\/]node_modules[\\/]/</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 引入的库是在node modules 会调用这个</span>priority<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">10</span> <span class="token comment" spellcheck="true">// 会生成 vendors~lodash.js</span>filename<span class="token punctuation">:</span> <span class="token string">'vendors.js'</span> <span class="token comment" spellcheck="true">// 会生成vendors.js</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">default</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 不在node modules去这里</span>minChunks<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>priority<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span>reuseExistingChunk<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token comment" spellcheck="true">// a.js import c from 'c'</span><span class="token comment" spellcheck="true">// b.js import c from 'c'</span><span class="token comment" spellcheck="true">// 如果a模块引入c, b模块也同样使用, 就不必再引入多一次</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span></code></pre><h3 id="Lazy-Loading"><a href="#Lazy-Loading" class="headerlink" title="Lazy Loading"></a>Lazy Loading</h3><ul><li>by import to implement lazy loading</li></ul><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// use es6 promise</span><span class="token keyword">function</span> <span class="token function">getComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token comment" spellcheck="true">/* webpackChunkName:"lodash" */</span> <span class="token string">"lodash"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>        <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token punctuation">:</span> _ <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            element<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> element<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// use es7 async await</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token punctuation">:</span> _ <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token comment" spellcheck="true">/* webpackChunkName:"lodash" */</span> <span class="token string">"lodash"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    element<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> element<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// vendors file get loaded when u click on the page</span>document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token function">getComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="Webpack-analyse-Preloading-Prefetching"><a href="#Webpack-analyse-Preloading-Prefetching" class="headerlink" title="Webpack analyse, Preloading, Prefetching"></a>Webpack analyse, Preloading, Prefetching</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// package.json (this will generate json file which contain the</span><span class="token comment" spellcheck="true">// result based on analyse on ur webpack file)</span><span class="token punctuation">{</span><span class="token string">"scripts"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">"dev-build"</span><span class="token punctuation">:</span> <span class="token string">"webpack --profile --json > stats.json --config webpack.dev.js"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// option one</span><span class="token comment" spellcheck="true">// webpack-bundle-analyzer</span><span class="token comment" spellcheck="true">// option two</span><span class="token comment" spellcheck="true">// put ur json file to here http://webpack.github.com/analyse for more details</span><span class="token comment" spellcheck="true">// option three</span><span class="token comment" spellcheck="true">// https://alexkuz.github.io/webpack-chart/</span><span class="token comment" spellcheck="true">// Prefetch (example need investigate more)</span>document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token comment" spellcheck="true">/* webpackPrefetch: true */</span> <span class="token string">"./click.js"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token punctuation">:</span> func <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// var element = document.createElement("div");</span><span class="token comment" spellcheck="true">// element.innerHTML = "lala";</span><span class="token comment" spellcheck="true">// document.body.appendChild(element);</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="CSS-bundle"><a href="#CSS-bundle" class="headerlink" title="CSS bundle"></a>CSS bundle</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">//抽离css文件</span>npm install <span class="token operator">--</span>save<span class="token operator">-</span>dev mini<span class="token operator">-</span>css<span class="token operator">-</span>extract<span class="token operator">-</span>plugin<span class="token comment" spellcheck="true">//压缩css文件</span>npm i optimize<span class="token operator">-</span>css<span class="token operator">-</span>assets<span class="token operator">-</span>webpack<span class="token operator">-</span>plugin <span class="token operator">-</span>D<span class="token comment" spellcheck="true">// package.json</span><span class="token punctuation">{</span><span class="token string">"sideEffects"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"*.css"</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">//除了css文件，其余的都TreeShaking</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// webpack.prod.js</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>module<span class="token punctuation">:</span> <span class="token punctuation">{</span>rules<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>test<span class="token punctuation">:</span> <span class="token regex">/\.scss$/</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 打包顺序-> postcss, sass, css, style 从下往上</span>use<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token comment" spellcheck="true">// style-loader is used for 挂载</span><span class="token comment" spellcheck="true">// "style-loader"</span><span class="token comment" spellcheck="true">// 用minicss loader 替换style loader</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span><span class="token punctuation">{</span>loader<span class="token punctuation">:</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span>options<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// 为了解决import scss in scss file,</span><span class="token comment" spellcheck="true">// 如果不加import loaders</span><span class="token comment" spellcheck="true">// 会直接执行 css skip sass and postcss loader</span>importLoaders<span class="token punctuation">:</span> <span class="token number">2</span><span class="token comment" spellcheck="true">// 模块化引入css</span><span class="token comment" spellcheck="true">// modules: true</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">"sass-loader"</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// help us add prefix: -m, -webkit, etc ...</span><span class="token string">"postcss-loader"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>test<span class="token punctuation">:</span> <span class="token regex">/\.css$/</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 打包顺序-> postcss, sass, css, style 从下往上</span>use<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token comment" spellcheck="true">// style-loader is used for 挂载</span><span class="token comment" spellcheck="true">// "style-loader",</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span><span class="token punctuation">{</span>loader<span class="token punctuation">:</span> <span class="token string">"css-loader"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>filename<span class="token punctuation">:</span> <span class="token string">'[name].css'</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">//直接引用的css文件</span>chunkFilename<span class="token punctuation">:</span> <span class="token string">'[name].chunk.css'</span><span class="token comment" spellcheck="true">//间接引用的css文件</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 压缩css</span><span class="token keyword">const</span> OptimizeCSSAssetsPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"optimize-css-assets-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>minimizer<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">OptimizeCSSAssetsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span></code></pre><h3 id="Shimming"><a href="#Shimming" class="headerlink" title="Shimming"></a>Shimming</h3><pre class=" language-js"><code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>ProvidePlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            $<span class="token punctuation">:</span> <span class="token string">"jquery"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//发现模块中有$字符串，就自动引入iquery,就可以用jquery</span>            _join<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"lodash"</span><span class="token punctuation">,</span> <span class="token string">"join"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//_join代表lodash里的join方法</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 如果想让每个js模块的this都指向window</span><span class="token comment" spellcheck="true">// npm install imports-loader -D</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    module<span class="token punctuation">:</span> <span class="token punctuation">{</span>        rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                test<span class="token punctuation">:</span> <span class="token regex">/\.js$/</span><span class="token punctuation">,</span>                exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>                use<span class="token punctuation">:</span> <span class="token punctuation">[</span>                    <span class="token punctuation">{</span>                        loader<span class="token punctuation">:</span> <span class="token string">"babel-loader"</span><span class="token punctuation">,</span>                    <span class="token punctuation">}</span><span class="token punctuation">,</span>                    <span class="token punctuation">{</span>                        <span class="token comment" spellcheck="true">//每个js模块的this都指向window</span>                        loader<span class="token punctuation">:</span> <span class="token string">"imports-loader?this=>window"</span><span class="token punctuation">,</span>                    <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h3 id="Caching"><a href="#Caching" class="headerlink" title="Caching"></a>Caching</h3><pre class=" language-js"><code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    output<span class="token punctuation">:</span> <span class="token punctuation">{</span>        filename<span class="token punctuation">:</span> <span class="token string">"[name].[contenthash].js"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//源代码不变，hash值就不会变，解决浏览器缓存问题。打包上线时，用户只需要更新有变化的代码，没有变化的从浏览器缓存读取</span>        chunkFilename<span class="token punctuation">:</span> <span class="token string">"[name].[contenthash].js"</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>        runtimeChunk<span class="token punctuation">:</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//兼容老版本webpack4，把manifest打包到runtime里，不影响业务代码和第三方模块</span>            name<span class="token punctuation">:</span> <span class="token string">"runtime"</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    performance<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//禁止提示性能上的一些问题</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h3 id="Global-Env"><a href="#Global-Env" class="headerlink" title="Global Env"></a>Global Env</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// package.json</span><span class="token punctuation">{</span><span class="token string">"scripts"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">"dev-build"</span><span class="token punctuation">:</span> <span class="token string">"webpack --config ./build/webpack.common.js"</span><span class="token punctuation">,</span><span class="token string">"dev"</span><span class="token punctuation">:</span> <span class="token string">"webpack-dev-server --config ./build/webpack.common.js"</span><span class="token punctuation">,</span><span class="token string">"build"</span><span class="token punctuation">:</span> <span class="token string">"webpack --env.production --config ./build/webpack.common.js"</span> <span class="token comment" spellcheck="true">//通过--env.production,把环境变量传进去</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// webpack.common.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">(</span>env<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>env <span class="token operator">&amp;&amp;</span> env<span class="token punctuation">.</span>production<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//线上环境</span><span class="token keyword">return</span> <span class="token function">merge</span><span class="token punctuation">(</span>commonConfig<span class="token punctuation">,</span> prodConfig<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//开发环境</span><span class="token keyword">return</span> <span class="token function">merge</span><span class="token punctuation">(</span>commonConfig<span class="token punctuation">,</span> devConfig<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="Library-Bundle-demo-library"><a href="#Library-Bundle-demo-library" class="headerlink" title="Library Bundle (demo-library)"></a>Library Bundle (demo-library)</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// webpack.config.js</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>mode<span class="token punctuation">:</span> <span class="token string">"production"</span><span class="token punctuation">,</span>entry<span class="token punctuation">:</span> <span class="token string">"./src/index.js"</span><span class="token punctuation">,</span>externals<span class="token punctuation">:</span> <span class="token string">"lodash"</span><span class="token punctuation">,</span>output<span class="token punctuation">:</span> <span class="token punctuation">{</span>path<span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"dist"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>filename<span class="token punctuation">:</span> <span class="token string">"library.js"</span><span class="token punctuation">,</span>library<span class="token punctuation">:</span> <span class="token string">"root"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//支持通过&lt;scritp src=ilibrary. js'>&lt;/script> 标签引入，在全局变量增加一个root变量</span>libraryTarget<span class="token punctuation">:</span> <span class="token string">"umd"</span> <span class="token comment" spellcheck="true">//别人用的时候，通过任何形式引入库都可以，比如AMD，CMD，ES MODULE，Commonjs</span><span class="token comment" spellcheck="true">// library: 'root',//打包生成全局变量root</span><span class="token comment" spellcheck="true">// libraryTarget: 'this' //把全局变量root挂载到this上，可以填umd，this，window,global</span><span class="token comment" spellcheck="true">// externals: {</span><span class="token comment" spellcheck="true">// lodash:{</span><span class="token comment" spellcheck="true">// root：'_', //是用script标签引入进来的，必须在全局注入一个 _ 变量，下面的library才能正常执行</span><span class="token comment" spellcheck="true">// commonjs:'lodash',//在用commonjs规范引入是，名字必须是lodash</span><span class="token comment" spellcheck="true">// }</span><span class="token comment" spellcheck="true">// }</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// package.json</span><span class="token punctuation">{</span><span class="token string">"main"</span><span class="token punctuation">:</span> <span class="token string">"./dist/library.js"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//最终要给别人使用的</span><span class="token punctuation">}</span></code></pre><h3 id="Webpack-PWA-demo-pwa"><a href="#Webpack-PWA-demo-pwa" class="headerlink" title="Webpack PWA (demo-pwa)"></a>Webpack PWA (demo-pwa)</h3><ul><li>using service worker technique to enable us offline view</li></ul><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">//模拟服务器</span>npm i http<span class="token operator">-</span>server <span class="token operator">-</span>D<span class="token comment" spellcheck="true">//添加 workbox-webpack-plugin 插件，然后调整 webpack.config.js 文件</span>npm install workbox<span class="token operator">-</span>webpack<span class="token operator">-</span>plugin <span class="token operator">--</span>save<span class="token operator">-</span>dev<span class="token comment" spellcheck="true">// package.json</span><span class="token punctuation">{</span><span class="token string">"start"</span><span class="token punctuation">:</span> <span class="token string">"http-server dist"</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">//在dist目录下运行http-server服务</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// webpack.prod.js</span><span class="token keyword">const</span> WorkboxPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'workbox-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>s<span class="token keyword">new</span> <span class="token class-name">WorkboxPlugin<span class="token punctuation">.</span>GenerateSW</span><span class="token punctuation">(</span><span class="token punctuation">{</span>clientsClaim<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>skipWaiting<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// index.js initial service workers</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"hello, PWA"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"serviceWorker"</span> <span class="token keyword">in</span> navigator<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//如果浏览器支持serviceWorker，就执行以下代码</span>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"load"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>navigator<span class="token punctuation">.</span>serviceWorker<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">"/service-worker.js"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>registration <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//注册成功</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"service-worker registed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>error <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//没注册成功</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"service-worker register error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="Webpack-DevServer-Proxy-demo-dev-proxy"><a href="#Webpack-DevServer-Proxy-demo-dev-proxy" class="headerlink" title="Webpack DevServer Proxy (demo-dev-proxy)"></a>Webpack DevServer Proxy (demo-dev-proxy)</h3><ul><li>setup proxy server for development</li></ul><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">//向服务器发送axios请求 (make request to server through axios)</span>npm i axios <span class="token operator">-</span>D<span class="token comment" spellcheck="true">// webpack.config.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>devServer<span class="token punctuation">:</span> <span class="token punctuation">{</span>contentBase<span class="token punctuation">:</span> <span class="token string">'./dist'</span><span class="token punctuation">,</span>open<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>port<span class="token punctuation">:</span> <span class="token number">8080</span><span class="token punctuation">,</span>hot<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>hotOnly<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>proxy<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 开发时方便接口转发，线上不用</span><span class="token string">'/react/api'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 访问 /react/api 时，代理到 target 上</span>target<span class="token punctuation">:</span> <span class="token string">'https://www.dell-lee.com'</span><span class="token punctuation">,</span>secure<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 如果访问https 要setting secure to false</span><span class="token comment" spellcheck="true">//对https协议的网址的请求的转发</span><span class="token comment" spellcheck="true">// 拦截，请求的是html,不走代理直接返回 /index.html文件</span><span class="token comment" spellcheck="true">// bypass: function(req, res, proxyOptions) {</span><span class="token comment" spellcheck="true">// if (req.headers.accept.indexOf('html') !== -1) {</span><span class="token comment" spellcheck="true">// console.log('Skipping proxy for browser request.');</span><span class="token comment" spellcheck="true">// return '/index.html';</span><span class="token comment" spellcheck="true">// }</span><span class="token comment" spellcheck="true">// },</span>pathRewrite<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'header.json'</span><span class="token punctuation">:</span> <span class="token string">'demo.json'</span> <span class="token comment" spellcheck="true">// when calling header.json actually get demo.json data</span><span class="token punctuation">}</span><span class="token punctuation">,</span>changeOrigin<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 解决网站对接口的限制</span>headers<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// add headers config like login use case, cookies usage etc</span>host<span class="token punctuation">:</span> <span class="token string">'www.dell-lee.com'</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="ESLint-Webpack-Setup-demo-eslint"><a href="#ESLint-Webpack-Setup-demo-eslint" class="headerlink" title="ESLint Webpack Setup (demo-eslint)"></a>ESLint Webpack Setup (demo-eslint)</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// install eslint</span>npm i eslint <span class="token operator">-</span>Dnpm i babel<span class="token operator">-</span>eslint <span class="token operator">-</span>Dnpm i eslint<span class="token operator">-</span>loader <span class="token operator">-</span>D<span class="token comment" spellcheck="true">// 快速生成eslint配置</span>npx eslint <span class="token operator">--</span>init<span class="token comment" spellcheck="true">// .eslintrc.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"extends"</span><span class="token punctuation">:</span> <span class="token string">"airbnb"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 用的是airbnb standard</span><span class="token string">"parser"</span><span class="token punctuation">:</span> <span class="token string">"babel-eslint"</span><span class="token punctuation">,</span><span class="token string">"rules"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">"react/prefer-stateless-function"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// allow disable statless function warning</span><span class="token string">"react/jsx-filename-extension"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>globals<span class="token punctuation">:</span> <span class="token punctuation">{</span>document<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token comment" spellcheck="true">// allow directly use document.getElementByID('root')</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// install plugins in vsc</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>devServer<span class="token punctuation">:</span> <span class="token punctuation">{</span>overlay<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token comment" spellcheck="true">// when open browser it will show error information</span><span class="token punctuation">}</span><span class="token punctuation">,</span>rules<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>test<span class="token punctuation">:</span> <span class="token regex">/\.js$/</span><span class="token punctuation">,</span>exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>use<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'babel-loader'</span><span class="token punctuation">,</span> <span class="token string">'eslint-loader'</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// 先检查代码写的是否规范，在转换成es5</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><h3 id="Webpack-Optimization-demo-dll"><a href="#Webpack-Optimization-demo-dll" class="headerlink" title="Webpack Optimization (demo-dll)"></a>Webpack Optimization (demo-dll)</h3><ul><li><p>跟上技术的迭代（Node，Npm，Yarn) (constantly update used packages)</p></li><li><p>在尽可能少的模块上应用 Loader (use whatever need loader)</p></li><li><p>Plugin 尽可能精简并确保可靠 (try use official plugin)</p></li><li><p>resolve 参数合理配置</p></li><li><p>使用 DLLPlugin 提高打包速度 (third party only bundle one time)</p></li></ul><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// Overall Process</span><span class="token comment" spellcheck="true">// run npm run build:dll 生成对应的 XXX.dll.js 和 XXX.manifest.json 文件。</span><span class="token comment" spellcheck="true">// 以后再执行 npm run build 或 npm run dev 时，就不用再node_modules查找对应模块进行分析，</span><span class="token comment" spellcheck="true">// 直接用打包好的 XXX.dll.js就可以，节省打包速度。</span><span class="token comment" spellcheck="true">// npm i add-asset-html-webpack-plugin --save</span><span class="token comment" spellcheck="true">// create webpack.dll.js 文件：把第三方模块单独进行打包，生成一个vendors.dll.js 文件，all third party inside this file</span><span class="token comment" spellcheck="true">// webpack.dll.js</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"webpack"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>mode<span class="token punctuation">:</span> <span class="token string">"production"</span><span class="token punctuation">,</span>entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>vendors<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"lodash"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>react<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"react"</span><span class="token punctuation">,</span> <span class="token string">"react-dom"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>jquery<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"jquery"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>output<span class="token punctuation">:</span> <span class="token punctuation">{</span>filename<span class="token punctuation">:</span> <span class="token string">"[name].dll.js"</span><span class="token punctuation">,</span>path<span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"../dll"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>library<span class="token punctuation">:</span> <span class="token string">"[name]"</span> <span class="token comment" spellcheck="true">//打包生成的库名，通过全局变量的形式暴露到全局</span><span class="token punctuation">}</span><span class="token punctuation">,</span>plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>DllPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//对暴露到全局的代码进行分析，生成vendors.manifest.json 的映射文件，</span>name<span class="token punctuation">:</span> <span class="token string">"[name]"</span><span class="token punctuation">,</span>path<span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"../dll/[name].manifest.json"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// webpack.common.js</span><span class="token keyword">const</span> AddAssetHtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"add-asset-html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> files <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"../dll"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>file <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex">/.*\.dll.js/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AddAssetHtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//将打包好的dll文件挂载到html中</span>filepath<span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"../dll"</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex">/.*\.manifest.json/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>DllReferencePlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//分析第三方模块是否已经在dll文件里，如果里面有就不用再node_modules在分析打包了</span>manifest<span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"../dll"</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// package.json;</span><span class="token punctuation">{</span><span class="token string">"scripts"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">"build:dll"</span><span class="token punctuation">:</span> <span class="token string">"webpack --config ./build/webpack.dll.js"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// webpack.dll.js</span><span class="token comment" spellcheck="true">// DllPlugin插件： 用于打包出一个个动态连接库</span><span class="token comment" spellcheck="true">// DllReferencePlugin: 在配置文件中引入DllPlugin插件打包好的动态连接库</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>mode<span class="token punctuation">:</span> <span class="token string">"production"</span><span class="token punctuation">,</span>entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>vendors<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"lodash"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// lodash模块打包到一个动态连接库</span>react<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"react"</span><span class="token punctuation">,</span> <span class="token string">"react-dom"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>jquery<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"jquery"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>output<span class="token punctuation">:</span> <span class="token punctuation">{</span>filename<span class="token punctuation">:</span> <span class="token string">"[name].dll.js"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 输出动态连接库的文件名称</span>path<span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"../dll"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>library<span class="token punctuation">:</span> <span class="token string">"[name]"</span> <span class="token comment" spellcheck="true">// 全局变量名称</span><span class="token punctuation">}</span><span class="token punctuation">,</span>plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>DllPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">"[name]"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 和output.library中一致，值就是输出的manifest.json中的 name值</span>path<span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"../dll/[name].manifest.json"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// webpack.common.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>DllReferencePlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>manifest<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"dist"</span><span class="token punctuation">,</span> <span class="token string">"react.manifest.json"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><ul><li>控制包文件大小</li></ul><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 配置 Tree shaking，把用不到的代码去除掉。配置 SplitChunksPlugin</span></code></pre><ul><li><p>thread-loader，parallel-webpack，happypack 多进程打包</p></li><li><p>合理使用 sourceMap</p></li><li><p>结合 stats 分析打包结果</p></li><li><p>开发环境内存编译</p></li><li><p>开发环境无用插件剔除</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关于持续集成</title>
      <link href="/2022/04/24/guan-yu-chi-xu-ji-cheng/"/>
      <url>/2022/04/24/guan-yu-chi-xu-ji-cheng/</url>
      
        <content type="html"><![CDATA[<h2 id="前置概念"><a href="#前置概念" class="headerlink" title="前置概念"></a>前置概念</h2><h3 id="CI-的含义"><a href="#CI-的含义" class="headerlink" title="CI 的含义"></a>CI 的含义</h3><p>CI 的意思是 <strong>持续构建</strong>。</p><p>负责拉取代码库中的代码后，执行用户预置定义好的操作脚本，通过一系列编译操作构建出一个 <strong>制品</strong> ，并将制品推送至到制品库里面。常用工具有 Gitlab CI，Github CI，Jenkins 等。这个环节不参与部署，只负责构建代码，然后保存构建物。构建物被称为 <strong>制品</strong>，保存制品的地方被称为 <strong>制品库</strong>。</p><h3 id="CD-的含义"><a href="#CD-的含义" class="headerlink" title="CD 的含义"></a>CD 的含义</h3><p>CD 则有 2 层含义：<strong>持续部署</strong>(Continuous Deployment) 和 <strong>持续交付</strong>(Continuous Delivery) 。</p><p><strong>持续交付</strong> 的概念是：将制品库的制品拿出后，部署在测试环境 / 交付给客户提前测试。<strong>持续部署</strong> 则是将制品部署在生产环境</p><p><strong>简而言之：持续集成就是能够采用自动化的手段，解放人的双手，实现项目持续交付的过程。</strong></p><p>详情见 <a href="https://help.coding.intlgame.com/docs/ci/intro.html">持续集成介绍</a></p><h2 id="持续集成"><a href="#持续集成" class="headerlink" title="持续集成"></a>持续集成</h2><p>在 coding 平台中实现持续集成的方式，</p><ul><li>打开项目找到需要的仓库，左侧导航中有一栏持续集成。</li></ul><p><img src="/api/project/1077/files/992654/imagePreview" alt="持续集成导航"></p><ul><li>选择点击构建计划，右上角新建构建计划，可以选择模板或者自定义的构建过程(这里我选择自定义构建)，如下图二，选择构建的代码仓库,配置来源中，hover 问号，查看来源区别(tips:静态配置在 coding 平台中编写构建文件)</li></ul><p><img src="/api/project/1077/files/992655/imagePreview" alt="创建构建计划"></p><p><img src="/api/project/1077/files/992657/imagePreview" alt="图二"></p><ul><li><p>配置构建过程</p></li><li><p>新的构建计划中，播放按钮为开始构建，三点符为配置构建过程，点击计划名称可以查看每一次构建状态的详情</p></li></ul><p><img src="/api/project/1077/files/992658/imagePreview" alt="图片"></p><ul><li>点击三点符的设置，配置计划明细</li></ul><p><img src="/api/project/1077/files/992660/imagePreview" alt="图片"></p><ul><li>基础信息配置中，自定义的构建节点需要腾讯侧申请构建机，并安装基础环境(自定义的构建节点可在持续集成下的构建节点查看详情)，默认 coding 会提供一台已安装好环境的云服务器</li></ul><p><img src="/api/project/1077/files/992661/imagePreview" alt="图片"></p><ul><li><p>流程配置为 Jenkins 规则的编写,即整个持续集成的重点,底部为 umijs 前端项目自动化部署到自定义构建节点的例子</p></li><li><p>触发规则配置 JenkinsFile 文件的触发方式</p></li></ul><p><img src="/api/project/1077/files/992662/imagePreview" alt="图片"></p><ul><li>变量与缓存介绍详见 <a href="https://help.coding.intlgame.com/docs/ci/env.html">环境变量</a></li></ul><blockquote><p>umijs 自动化部署示例</p></blockquote><pre><code>pipeline {agent anystages {stage('Checkout') {steps {checkout([$class: 'GitSCM',branches: [[name: GIT_BUILD_REF]],userRemoteConfigs: [[url: GIT_REPO_URL,credentialsId: CREDENTIALS_ID]]])}}stage("Judge") {steps {//echo '${CREDENTIALS_ID}'//sh 步骤执行 shell 命令，只有命令返回的状态码为零时才会继续。任何非零的返回码都将使流水线失败。sh '''ls -almkdir /var/nm_cachemkdir "${CACHE_DIR}"cache_dir="${CACHE_DIR}"cache_nm="${CACHE_DIR}node_modules"cache_lock="${CACHE_DIR}yarn.lock"if [ ! -d "$cache_dir" ]; then mkdir ${cache_dir}; fiif [ ! -d "$cache_nm" ]; then mkdir ${cache_nm}; fiif [ -d "$cache_nm" ]; then ln -sf ${cache_nm} ./; fiif [ -f "$cache_lock" ]; then mv -n ${cache_lock} .; fils -al'''}}stage('Build') {steps {sh '''npm config set registry https://registry.npm.taobao.orgyarn installyarn buildtar -cvf dist.tar distls -almv ./yarn.lock ${CACHE_DIR}rm -rf ./node_modulesls -al'''//命令存档文件(捕获符合模式,匹配的交付件并将其保存到 Jenkins master 节点以供后续获取。)//fingerprint:记录文件的指纹以跟踪使用情况archiveArtifacts artifacts: 'dist.tar', fingerprint: true}}stage('Deploy') {steps {//将归档的文件复制到工作区unarchive mapping: ['dist.tar': 'dist.tar']echo '--- Deploy ---'//ssh-agent 代理sshagent(["${CREDENTIALS_ID}"]) {//scp是linux系统下基于ssh登陆进行安全的远程文件拷贝命令sh 'scp -o StrictHostKeyChecking=no dist.tar root@${SERVER_IP_1}:${SERVER_DEPLOY_DIR}'sh 'ssh -o StrictHostKeyChecking=no root@${SERVER_IP_1} \"rm -rf ${SERVER_DEPLOY_DIR}dist; tar -xvf ${SERVER_DEPLOY_DIR}dist.tar -C ${SERVER_DEPLOY_DIR}\"'}}}environment {SERVER_IP_1 = "11.22.33.44"SERVER_DEPLOY_DIR = "/www/wwwroot/"//缓存目录CACHE_DIR = "/var/nm_cache/mtool-demo/"}}</code></pre><pre><code>整个部署脚本分为四个步骤- Checkout（在指定 git 仓库通过指定证书文件获取代码）- Judge（对node_modules和yarn.lock的缓存）- 看指定 node_modules 缓存文件夹是否存在，不存在则新建该文件夹；- 看缓存文件夹中是否有 node_modules 文件夹，如果没有则新建该文件夹；并且将该文件夹软连接到当前目录；- 看缓存文件夹中是否有 yarn.lock 文件，如果有则移动到当前文件夹；- Build（通过指定命令进行编译，将编译后的产物存档）- 移除 node_modules 文件夹的软连接；- 将 yarn.lock 文件移动到缓存文件夹中；- Deploy（通过指定命令部署）注意：Deploy报错 `No such DSL method 'sshagent' found among steps`，只需要安装 `SSH Agent Jenkins plugin`即可</code></pre><h2 id="Jenkins"><a href="#Jenkins" class="headerlink" title="Jenkins"></a>Jenkins</h2><h3 id="Jenkins-是什么？"><a href="#Jenkins-是什么？" class="headerlink" title="Jenkins 是什么？"></a>Jenkins 是什么？</h3><p>Jenkins 可以理解为一个 java 项目，目标为提供一个面向软件持续集成的软件平台,事实上 Jenkins 是一款开源 CI&amp;CD 软件，用于自动化各种任务，包括构建、测试和部署软件。Jenkins 支持各种运行方式，可通过系统包、Docker 或者通过一个独立的 Java 程序,官网<a href="https://www.jenkins.io/">Jenkins</a></p><h3 id="Jenkins-基础"><a href="#Jenkins-基础" class="headerlink" title="Jenkins 基础"></a>Jenkins 基础</h3><p>Jenkinsfile 支持<code>声明式</code>（Declarative）和<code>脚本式</code>（Script）两种语法(因为声明式（Declarative）语法是 Jenkins 更新支持的特性，所以本篇主要聚焦于声明式文件的语法规则)，声明式和脚本化的流水线从根本上是不同的。 声明式流水线的是 Jenkins 流水线更近的特性:</p><ul><li><p>相比脚本化的流水线语法，它提供更丰富的语法特性,</p></li><li><p>是为了使编写和读取流水线代码更容易而设计的。</p></li></ul><h4 id="Jenkins-Pipeline-流水线-基础"><a href="#Jenkins-Pipeline-流水线-基础" class="headerlink" title="Jenkins Pipeline(流水线)基础"></a>Jenkins Pipeline(流水线)基础</h4><ul><li><p>Jenkins Pipeline（或简称为 “Pipeline”）是一套插件，将持续交付的实现和实施集成到 Jenkins 中。</p></li><li><p>持续交付 Pipeline 自动化的表达了这样一种流程：将基于版本控制管理的软件持续的交付到您的用户和消费者手中。</p></li><li><p>Jenkins Pipeline 提供了一套可扩展的工具，用于将“简单到复杂”的交付流程实现为“持续交付即代码”。Jenkins Pipeline 的定义通常被写入到一个文本文件（称为 Jenkinsfile ）中，该文件可以被放入项目的源代码控制库中。</p></li></ul><blockquote><p>nodejs 示例</p></blockquote><pre><code>Jenkinsfile (Declarative Pipeline)pipeline {agent { docker 'node:6.3' }stages {stage('build') {steps {sh 'npm --version'}}}}</code></pre><h5 id="Agent（执行环境或称为代理）"><a href="#Agent（执行环境或称为代理）" class="headerlink" title="Agent（执行环境或称为代理）"></a>Agent（执行环境或称为代理）</h5><p>执行环境描述了整个流水线执行过程或者某个阶段的执行环境，必须出现在描述文件顶级或者每一个阶段里(必填参数，且必须出现在描述文件顶级或者每一个阶段里)。</p><p>参数：</p><ul><li><p>any 在任何可用的代理上执行流水线或阶段。例如: agent any</p></li><li><p>none 当在 pipeline 块的顶部没有全局代理， 该参数将会被分配到整个流水线的运行中并且每个 stage 部分都需要包含他自己的 agent 部分。比如: agent none</p></li><li><p>none 当在 pipeline 块的顶部没有全局代理， 该参数将会被分配到整个流水线的运行中并且每个 stage 部分都需要包含他自己的 agent 部分。比如: agent none</p></li><li><p>node agent { node { label ‘labelName’ } } 和 agent { label ‘labelName’ } 一样, 但是 node 允许额外的选项 (比如 customWorkspace )</p></li><li><p>docker 使用给定的容器执行流水线或阶段。该容器将在预置的 node 上，或在匹配可选定义的<code>label</code> 参数上，动态的供应来接受基于 Docker 的流水线。docker 也可以选择的接受 args 参数，该参数可能包含直接传递到 docker run 调用的参数, 以及 alwaysPull 选项, 该选项强制 docker pull ，即使镜像名称已经存在。</p></li></ul><p>-dockerfile 执行流水线或阶段, 使用从源代码库包含的 Dockerfile 构建的容器。</p><h5 id="Stages-阶段列表"><a href="#Stages-阶段列表" class="headerlink" title="Stages(阶段列表)"></a>Stages(阶段列表)</h5><p>阶段列表包含了一系列的阶段，一个阶段列表最少包含一个阶段。流水线里必须要有且仅有一个阶段列表(必填参数，且在 流水线（pipeline）内只能出现一次)</p><h5 id="Stage-阶段"><a href="#Stage-阶段" class="headerlink" title="Stage(阶段)"></a>Stage(阶段)</h5><p>一个阶段定义了一系列紧密相关的步骤。每个阶段在整条流水线中各自承担了独立、明确的责任。比如“构建阶段”、“测试阶段”或“部署阶段”。通常来讲，所有的实际构建过程都放置在阶段里面(必填参数,至少一个)。</p><h5 id="Steps-步骤列表"><a href="#Steps-步骤列表" class="headerlink" title="Steps(步骤列表)"></a>Steps(步骤列表)</h5><p>步骤列表描述了一个阶段内具体要做什么事，具体要执行什么命令。比如有一个步骤（step）需要系统打印一条“构建中…”的消息，即执行命令 echo ‘构建中…’(必填参数，且在每一个 阶段（stage）块内)。</p><h5 id="post-强大的故障处理"><a href="#post-强大的故障处理" class="headerlink" title="post(强大的故障处理)"></a>post(强大的故障处理)</h5><p>post 部分定义一个或多个 steps ，这些阶段根据流水线或阶段的完成情况而 运行(取决于流水线中 post 部分的位置). post 支持以下 post-condition 块中的其中之一: always, changed, failure, success, unstable, 和 aborted。这些条件块允许在 post 部分的步骤的执行取决于流水线或阶段的完成状态(按照惯例, post 部分应该放在流水线的底部)。</p><ul><li><p>always 无论流水线或阶段的完成状态如何，都允许在 post 部分运行该步骤。</p></li><li><p>changed 只有当前流水线或阶段的完成状态与它之前的运行不同时，才允许在 post 部分运行该步骤。</p></li><li><p>failure 只有当前流水线或阶段的完成状态为”failure”，才允许在 post 部分运行该步骤, 通常 web UI 是红色。</p></li><li><p>success 只有当前流水线或阶段的完成状态为”success”，才允许在 post 部分运行该步骤, 通常 web UI 是蓝色或绿色。</p></li><li><p>unstable 只有当前流水线或阶段的完成状态为”unstable”，才允许在 post 部分运行该步骤, 通常由于测试失败,代码违规等造成。通常 web UI 是黄色。</p></li><li><p>aborted 只有当前流水线或阶段的完成状态为”aborted”，才允许在 post 部分运行该步骤, 通常由于流水线被手动的 aborted。通常 web UI 是灰色。</p></li></ul><h5 id="Parallel-并行"><a href="#Parallel-并行" class="headerlink" title="Parallel(并行)"></a>Parallel(并行)</h5><p>并行用来声明一些并行执行的阶段，通常适用于阶段与阶段之间不存在依赖关系的情况下，用来加快执行速度。注意任何含并行区块下的阶段不能再设置执行环境。</p><h5 id="Script-脚本"><a href="#Script-脚本" class="headerlink" title="Script(脚本)"></a>Script(脚本)</h5><p>执行一段脚本作为一个步骤。一般不用，有时需要“应急出口”才派上用场</p><blockquote><p>流水线示例</p></blockquote><pre><code>Jenkinsfile (Declarative Pipeline)pipeline {agent anystages {stage('Build') {steps {sh 'make'}}stage('Test'){steps {sh 'make check'junit 'reports/**/*.xml'}}stage('Deploy') {steps {sh 'make publish'}}}}</code></pre><blockquote><p>tips：pipeline 规则见<a href="https://www.jenkins.io/zh/doc/book/pipeline/syntax/">规则</a></p></blockquote><h3 id="Jenkins-环境变量"><a href="#Jenkins-环境变量" class="headerlink" title="Jenkins 环境变量"></a>Jenkins 环境变量</h3><h4 id="使用环境变量"><a href="#使用环境变量" class="headerlink" title="使用环境变量"></a>使用环境变量</h4><p>Jenkins 流水线通过全局变量 env 提供环境变量，它在 Jenkinsfile 文件的任何地方都可以使用。Jenkins 流水线中可访问的完整的环境变量列表记录在 <code>${YOUR_JENKINS_URL}/pipeline-syntax/globals#env</code>，并且包括：</p><ul><li><p>BUILD_ID 当前构建的 ID，与 Jenkins 版本 1.597+ 中创建的构建号 BUILD_NUMBER 是完全相同的。</p></li><li><p>BUILD_NUMBER 当前构建号，比如 “153”。</p></li><li><p>BUILD_TAG 字符串 <code>jenkins-${JOB_NAME}-${BUILD_NUMBER}</code>。可以放到源代码、jar 等文件中便于识别。</p></li><li><p>BUILD_URL 可以定位此次构建结果的 URL（比如 <a href="http://buildserver/jenkins/job/MyJobName/17/">http://buildserver/jenkins/job/MyJobName/17/</a> ）</p></li><li><p>EXECUTOR_NUMBER 用于识别执行当前构建的执行者的唯一编号（在同一台机器的所有执行者中）。这个就是你在“构建执行状态”中看到的编号，只不过编号从 0 开始，而不是 1。</p></li><li><p>JAVA_HOME 如果你的任务配置了使用特定的一个 JDK，那么这个变量就被设置为此 JDK 的 JAVA_HOME。当设置了此变量时，PATH 也将包括 JAVA_HOME 的 bin 子目录。</p></li><li><p>JENKINS_URL Jenkins 服务器的完整 URL，比如 <a href="https://example.com:port/jenkins/">https://example.com:port/jenkins/</a> （注意：只有在“系统设置”中设置了 Jenkins URL 才可用）。</p></li><li><p>JOB_NAME 本次构建的项目名称，如 “foo” 或 “foo/bar”。</p></li><li><p>NODE_NAME 运行本次构建的节点名称。对于 master 节点则为 “master”。</p></li><li><p>WORKSPACE workspace 的绝对路径。</p></li></ul><blockquote><p>示例</p></blockquote><pre><code>Jenkinsfile (Declarative Pipeline)pipeline {agent anystages {stage('Example') {steps {echo "Running ${env.BUILD_ID} on ${env.JENKINS_URL}"}}}}</code></pre><h4 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h4><p>优先级 withEnv &gt; environment</p><p>同样的，环境变量的作用域取决于定义的位置</p><h4 id="动态设置环境变量"><a href="#动态设置环境变量" class="headerlink" title="动态设置环境变量"></a>动态设置环境变量</h4><p>环境变量可以在运行时设置，然后给 shell 脚本（<code>sh</code>）、Windows 批处理脚本（<code>batch</code>）和 Powershell 脚本（<code>powershell</code>）使用。各种脚本都可以返回 <code>returnStatus</code> 或 <code>returnStdout</code>。</p><blockquote><p>示例</p></blockquote><pre><code>Jenkinsfile (Declarative Pipeline)pipeline {agent anyenvironment {// 使用 returnStdoutCC = """${sh(returnStdout: true,script: 'echo "clang"')}"""// 使用 returnStatusEXIT_STATUS = """${sh(returnStatus: true,script: 'exit 1')}"""}stages {stage('Example') {environment {DEBUG_FLAGS = '-g'}steps {sh 'printenv'}}}}</code></pre><h3 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h3><h4 id="options"><a href="#options" class="headerlink" title="options"></a>options</h4><p><code>options</code> 指令允许从流水线内部配置特定于流水线的选项。 流水线提供了许多这样的选项, 比如 <code>buildDiscarder</code>,但也可以由插件提供, 比如 `timestamps(同样可以配置在 stage 中)</p><ul><li><p>buildDiscarder 为最近的流水线运行的特定数量保存组件和控制台输出。例如: options { buildDiscarder(logRotator(numToKeepStr: ‘1’)) }</p></li><li><p>disableConcurrentBuilds 不允许同时执行流水线。 可被用来防止同时访问共享资源等。 例如: options { disableConcurrentBuilds() }</p></li><li><p>overrideIndexTriggers 允许覆盖分支索引触发器的默认处理。 如果分支索引触发器在多分支或组织标签中禁用, options { overrideIndexTriggers(true) } 将只允许它们用于促工作。否则, options { overrideIndexTriggers(false) } 只会禁用改作业的分支索引触发器。</p></li><li><p>skipDefaultCheckout 在<code>agent</code> 指令中，跳过从源代码控制中检出代码的默认情况。例如: options { skipDefaultCheckout() }</p></li><li><p>skipStagesAfterUnstable 一旦构建状态变得 UNSTABLE，跳过该阶段。例如: options { skipStagesAfterUnstable() }</p></li><li><p>checkoutToSubdirectory 在工作空间的子目录中自动地执行源代码控制检出。例如: options { checkoutToSubdirectory(‘foo’) }</p></li><li><p>timeout 设置流水线运行的超时时间, 在此之后，Jenkins 将中止流水线。例如: options { timeout(time: 1, unit: ‘HOURS’) }</p></li><li><p>retry 在失败时, 重新尝试整个流水线的指定次数。 For example: options { retry(3) }</p></li><li><p>timestamps 预谋此阶段生成的所有控制台输出以及该行发出的时间一致。例如: options { timestamps() }</p></li></ul><blockquote><p>示例</p></blockquote><pre><code>Jenkinsfile (Declarative Pipeline)pipeline {agent anyoptions {timeout(time: 1, unit: 'HOURS')}stages {stage('Example') {steps {echo 'Hello World'}}}}</code></pre><h4 id="parameters-参数指令"><a href="#parameters-参数指令" class="headerlink" title="parameters(参数指令)"></a>parameters(参数指令)</h4><p>parameters 指令提供了一个用户在触发流水线时应该提供的参数列表。这些用户指定参数的值可通过 params 对象提供给流水线步骤(只能有一个且在 pipeline 下)。</p><ul><li><p>string 字符串类型的参数, 例如: parameters { string(name: ‘DEPLOY_ENV’, defaultValue: ‘staging’, description: ‘’) }</p></li><li><p>booleanParam 布尔参数, 例如: parameters { booleanParam(name: ‘DEBUG_BUILD’, defaultValue: true, description: ‘’)</p></li></ul><blockquote><p>示例</p></blockquote><pre><code>Jenkinsfile (Declarative Pipeline)pipeline {agent anyparameters {string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')}stages {stage('Example') {steps {echo "Hello ${params.PERSON}"}}}}</code></pre><h4 id="triggers-触发器"><a href="#triggers-触发器" class="headerlink" title="triggers(触发器)"></a>triggers(触发器)</h4><p><code>triggers</code> 指令定义了流水线被重新触发的自动化方法</p><ul><li><p>cron 接收 cron 样式的字符串来定义要重新触发流水线的常规间隔 ,比如: triggers { cron(‘H _/4 _ * 1-5’) }</p></li><li><p>pollSCM 接收 cron 样式的字符串来定义一个固定的间隔，在这个间隔中，Jenkins 会检查新的源代码更新。如果存在更改, 流水线就会被重新触发。例如: triggers { pollSCM(‘H _/4 _ * 1-5’) }</p></li><li><p>upstream 接受逗号分隔的工作字符串和阈值。 当字符串中的任何作业以最小阈值结束时，流水线被重新触发。例如: triggers { upstream(upstreamProjects: ‘job1,job2’, threshold: hudson.model.Result.SUCCESS) }</p></li></ul><blockquote><p>示例</p></blockquote><pre><code>Jenkinsfile (Declarative Pipeline)pipeline {agent anytriggers {cron('H */4 * * 1-5')}stages {stage('Example') {steps {echo 'Hello World'}}}}</code></pre><h4 id="tool-工具"><a href="#tool-工具" class="headerlink" title="tool(工具)"></a>tool(工具)</h4><p>定义自动安装和放置 PATH 的工具的一部分。如果 agent none 指定，则忽略该操作(Inside the pipeline block or a stage block)。</p><p>支持工具 maven jdk gradle</p><blockquote><p>示例</p></blockquote><pre><code>Jenkinsfile (Declarative Pipeline)pipeline {agent anytools {maven 'apache-maven-3.0.1'}stages {stage('Example') {steps {sh 'mvn --version'}}}}</code></pre><h4 id="input"><a href="#input" class="headerlink" title="input"></a>input</h4><p>stage 的 input 指令允许你使用 input step 提示输入。 在应用了 options 后，进入 stage 的 agent 或评估 when 条件前， stage 将暂停。 如果 input 被批准, stage 将会继续。 作为 input 提交的一部分的任何参数都将在环境中用于其他 stage。</p><ul><li><p>message 必需的。 这将在用户提交 input 时呈现给用户。</p></li><li><p>id input 的可选标识符， 默认为 stage 名称。</p></li><li><p>ok <code>input</code>表单上的”ok” 按钮的可选文本。</p></li><li><p>submitter 可选的以逗号分隔的用户列表或允许提交 input 的外部组名。默认允许任何用户。</p></li><li><p>submitterParameter 环境变量的可选名称。如果存在，用 submitter 名称设置。</p></li><li><p>parameters 提示提交者提供的一个可选的参数列表。 更多信息参见 [parameters]。</p></li></ul><blockquote><p>示例</p></blockquote><pre><code>Jenkinsfile (Declarative Pipeline)pipeline {agent anystages {stage('Example') {input {message "Should we continue?"ok "Yes, we should."submitter "alice,bob"parameters {string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')}}steps {echo "Hello, ${PERSON}, nice to meet you."}}}}</code></pre><h4 id="when"><a href="#when" class="headerlink" title="when"></a>when</h4><p>when 指令允许流水线根据给定的条件决定是否应该执行阶段。 when 指令必须包含至少一个条件。 如果 when 指令包含多个条件, 所有的子条件必须返回 True，阶段才能执行。 这与子条件在 allOf 条件下嵌套的情况相同(在 stage 中编写)</p><ul><li><p>branch 当正在构建的分支与模式给定的分支匹配时，执行这个阶段, 例如: when { branch ‘master’ }。注意，这只适用于多分支流水线。</p></li><li><p>environment 当指定的环境变量是给定的值时，执行这个步骤, 例如: when { environment name: ‘DEPLOY_TO’, value: ‘production’ }</p></li><li><p>expression 当指定的 Groovy 表达式评估为 true 时，执行这个阶段, 例如: when { expression { return params.DEBUG_BUILD } }</p></li><li><p>not 当嵌套条件是错误时，执行这个阶段,必须包含一个条件，例如: when { not { branch ‘master’ } }</p></li><li><p>allOf 当所有的嵌套条件都正确时，执行这个阶段,必须包含至少一个条件，例如: when { allOf { branch ‘master’; environment name: ‘DEPLOY_TO’, value: ‘production’ } }</p></li><li><p>anyOf 当至少有一个嵌套条件为真时，执行这个阶段,必须包含至少一个条件，例如: when { anyOf { branch ‘master’; branch ‘staging’ } }</p></li></ul><p>在进入 stage 的 agent 前评估 when</p><p>默认情况下, 如果定义了某个阶段的代理，在进入该<code>stage</code> 的 agent 后该 stage 的 when 条件将会被评估。但是, 可以通过在 when 块中指定 beforeAgent 选项来更改此选项。 如果 beforeAgent 被设置为 true, 那么就会首先对 when 条件进行评估 , 并且只有在 when 条件验证为真时才会进入 agent 。</p><blockquote><p>示例</p></blockquote><pre><code>Jenkinsfile (Declarative Pipeline)pipeline {agent anystages {stage('Example Build') {steps {echo 'Hello World'}}stage('Example Deploy') {when {branch 'production'}steps {echo 'Deploying'}}}}</code></pre><h3 id="Jenkinsfile"><a href="#Jenkinsfile" class="headerlink" title="Jenkinsfile"></a>Jenkinsfile</h3><p>上面创建构建计划的测试用例中有提到在 coding 中有两种方式来运行 Jenkins, 而创建一个检入到源码管理系统中 的 <code>Jenkinsfile</code> 带来了一些直接的好处：</p><ul><li><p>流水线上的代码评审/迭代</p></li><li><p>对流水线进行审计跟踪</p></li><li><p>流水线的单一可信数据源 ,能够被项目的多个成员查看和编辑。</p></li><li><p>关于 Jenkinsfile 的更多介绍见<a href="https://www.jenkins.io/zh/doc/book/pipeline/jenkinsfile/">jenkinsfile</a></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/04/18/hello-world/"/>
      <url>/2022/04/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
